   1	subsequent	jj
   1	formal	jj
   1	former	jj
   1	enter	vb
   1	consideration	nn
   1	length	nnp
   1	sequentially	rb
   1	encompass	vb
   1	brace-bound	jj
   1	fall	vb
   1	importpaths	nnp
   1	twice	rb
   1	offset	nn
   1	right	jj
   1	program-defined	jj
   1	encode	nn
   1	manipulate	vb
   1	reachable	jj
   1	period	nn
   1	hierarchy	nn
   1	integrated	jj
   1	fma	nnp
   1	cap	nn
   1	read	vb
   1	inherit	vb
   1	ordering	nn
   1	independently	rb
   1	analyze	vb
   1	scope	vb
   1	unresolved	jj
   1	zero	nnp
   1	types—may	rb
   1	member	nn
   1	camelcase	nnp
   1	surrogate	jj
   1	event	nn
   1	express	vb
   1	non-composite	jj
   1	updated	jj
   1	union	nnp
   1	common	jj
   1	assemble	jj
   1	disassemble	jj
   1	execute	nn
   1	segment	nn
   1	contiguous	jj
   1	initializer	nn
   1	initializer	jj
   1	byte-wise	nn
   1	single-character	jj
   1	slightly	rb
   1	syntactically	rb
   1	fusion	nn
   1	compile	jj
   1	useful	jj
   1	nul	nnp
   1	second	nnp
   1	grouping	vb
   1	wish	vb
   1	prime	jj
   1	inhabit	nn
   1	unlikely	jj
   1	rewrite	vb
   1	assembly	nn
   1	begin	nn
   1	failure	nn
   1	sender	nn
   1	uniform	jj
   1	non-	jj
   1	nd	nnp
   1	trigger	nn
   1	alternation	nn
   1	general	nnp
   1	structurally	rb
   1	leave	vb
   1	round	nn
   1	round	nnp
   1	higher-dimensional	jj
   1	type-specific	jj
   1	redeclare	vb
   1	label	nnp
   1	garbage-collected	jj
   1	extra	jj
   1	related	jj
   1	strongly	rb
   1	communicate	vb
   1	graphic	nnp
   1	lose	vb
   1	backus-naur	jj
   1	stepwise	nn
   1	language	nnp
   1	qualifier	nn
   1	behave	vb
   1	earlier	rbr
   1	earlier	jjr
   1	easy	jj
   1	option	nn
   1	interface{}	nn
   1	imaginarypart	vb
   1	dynamically	rb
   1	uint32	nn
   1	repeatedly	rb
   1	clear	jj
   1	annotate	vb
   1	turn	nn
   1	turn	vb
   1	facility	nn
   1	series	nn
   1	deduce	vb
   1	relevant	jj
   1	that	rb
   1	survive	vb
   1	path	nn
   1	assignment	nnp
   1	first	nnp
   1	overwrite	vb
   1	difference	nn
   1	shortvardecl	nnp
   1	half	nn
   1	semantically	rb
   1	portable	jj
   1	development	nn
   1	line	nnp
   1	minimum	nn
   1	computer	nnp
   1	align	vb
   1	ellipsis	nn
   1	defer	nnp
   1	switch	nn
   1	no-op	jj
   1	embeddedfield	nnp
   1	truncation	nn
   1	multiplication	nn
   1	receive-only	jj
   1	leftmost	nn
   1	channels	nnp
   1	quote	vb
   1	queue	nn
   1	queue	vb
   1	extract	vb
   1	version	nn
   1	parenthesis	vb
   1	initialization	nnp
   1	verify	vb
   1	optimize	vb
   1	direct	vb
   1	side-effect	nn
   1	interrupt	vb
   1	allocation	nnp
   1	organization	nn
   1	directory	nn
   1	automatic	jj
   1	moreover	rb
   1	deletion	nn
   1	sieve	nn
   1	architecture	nn
   1	originally	rb
   1	manual	nn
   1	multiply	nn
   1	multiply	vb
   1	low	jj
   1	marking	vb
   1	approximately	rb
   1	export	nn
   1	synchronization	nn
   1	attribute	nn
   1	running	nn
   1	stay	vb
   1	full	nnp
   1	expressionlist	nnp
   1	track	vb
   1	group	nn
   1	passing	nn
   1	factor	nn
   1	reviewer	nn
   1	lm	nnp
   1	sequential	jj
   1	indicate	vb
   1	unsafe	jj
   1	two-digit	jj
   1	mean	vb
   1	imag	nn
   1	unknown	jj
   1	deterministically	rb
   1	linguistic	jj
   1	inverse	nn
   1	float64	jj
   1	printing	nn
   1	introduction	nn
   1	reverse	nn
   1	three-digit	jj
   1	immaterial	jj
   1	vocabulary	nn
   1	lu.	nnp
   1	near	jj
   1	holder	nn
   1	assignability	nnp
   1	hexadecimal	nnp
   1	lead	vb
   1	significantly	rb
   1	matter	vb
   1	assume	nnp
   1	too	rb
   1	wrap	nn
   1	specially	rb
   1	normal	jj
   1	measure	nn
   1	nothing	nn
   1	re-use	vb
   1	general-purpose	jj
   1	design	vb
   1	spec	nn
   1	relation	nn
   1	disjoint	nn
   1	curly	rb
   1	local	nnp
   1	dereference	vb
   1	choice	nn
   1	redeclared	vb
   1	top-to-bottom	jj
   1	anew	rb
   1	inclusive	jj
   1	simplify	vb
   1	irrespective	nn
   1	representability	nnp
   1	unparenthesized	jj
   1	constrain	vb
   1	efficient	jj
   1	exploit	vb
   1	circumstance	nn
   1	remove	jj
   1	violate	vb
   1	detail	nn
   1	white	nnp
   1	documentation	nn
   1	instantiation	vb
   1	instantiation	nnp
   1	meta-)type	jj
   1	receive	nnp
   1	bool	nn
   1	management	nn
   1	varspec	nnp
   1	plain	nn
   1	divide	vb
   1	descriptor	nn
   1	subexpression	nn
   1	encourage	vb
   1	control	nn
   1	labels	nnp
   1	left-	jj
   1	close	rb
   1	close	nnp
   1	sometimes	rb
   1	typically	rb
   1	other	nn
   1	letter	nnp
   1	own	jj
   1	alone	rb
   1	lower-case	jj
   1	lower-case	nnp
   1	informally	rb
   1	conflict	vb
   1	regardless	rb
   1	regardless	nnp
   1	right-hand-side	jj
   1	keywords	vb
   1	range	nnp
   1	cost	nn
   1	prose	nn
   1	safety	nn
   1	programming	nnp
   1	category	nnp
   1	prevent	vb
   1	xor	nn
   1	built-in	nn
   1	accommodate	vb
   1	trailing	nn
   1	non-variadic	jj
   1	structured	jj
   1	structured	nnp
   1	generally	nnp
   1	accurately	rb
   1	discussion	nn
   1	canonicalized	vb
   1	indistinguishable	jj
   1	first-in-first-out	jj
   1	delete	nn
   1	operate	vb
   1	limited	jj
   1	hypothetical	jj
   1	completely	rb
   1	manually	rb
   1	sent	nn
   1	erroneously	rb
   1	irrelevant	jj
   1	differently	rb
   1	termination	nn
   1	build	jj
   1	holding	vb
   1	state	vb
   1	fewer	jjr
   1	solely	rb
   1	idiomatic	jj
   1	nn	jj
   1	iota	nnp
   1	break	nnp
   1	deliver	vb
   1	enumeration	nn
   1	binary	nnp
   1	creation	nn
   1	send	jj
   1	send	nn
   1	differ	vb
   1	legally	rb
   1	format	vb
   1	format	nn
   1	modulo	jj
   1	dereferenced	vb
   1	portability	nn
   1	suppose	vb
   1	bootstrapping	nnp
   1	terminator	nn
   1	conventional	jj
   1	reflect	vb
   1	overlap	vb
   1	repeat	vb
   1	enforce	vb
   1	unimported	jj
   1	correspond	nn
   1	calculate	vb
   1	record	nn
   1	nnn	jj
   1	variant	nn
   1	know	vb
   1	cyclic	jj
   1	reach	nn
   1	constituent	nn
   1	stop	nn
   1	generator	nn
   1	assumption	nn
   1	minimal	jj
   1	uint16	nn
   1	multi-dimensional	jj
   1	pairs	nn
   1	sufficiently	rb
   1	compact	jj
   1	integral	jj
   1	influence	nn
   1	illustrate	vb
   1	attempt	vb
   1	subset	nn
   1	multi-character	jj
   1	initialization—variable	jj
   1	finite	jj
   1	bootstrap	vb
   1	not-a-number	jj
   1	incoming	nn
   1	override	vb
   1	assignments	nnp
   1	ebnf	nnp
   1	accented	jj
   1	insert	vb
   1	completeness	nn
   1	import	nn
   1	textual	jj
   1	strong	jj
   1	mind	nn
   1	n-bit	jj
   1	thread	nn
   1	types—array	nn
   1	impossible	jj
   1	find	vb
   1	protect	vb
   1	pre-go1.18	nn
   1	insertion	nn
   1	reproducible	jj
   1	wide	jj
   1	n	jj
   1	encounter	vb
   1	implicit	nn
   1	alternative	nn
   1	become	vb
   1	grow	vb
   1	elementary	jj
   1	oppose	vb
   1	contain	nn
   1	manage	vb
   1	top	jj
   1	functions—happen	nn
   1	ll	nnp
   1	architecture-independent	jj
   1	reserve	vb
   1	multi-variable	jj
   1	addressability	nn
   1	number	nnp
   1	int64	jj
   1	light-weight	jj
   1	position	nn
   1	literally	rb
   1	vertical	jj
   1	immutable	jj
   1	nan	nnp
   1	uniqueness	nnp
   1	excluding	nnp
   1	specification	nnp
   1	simplicity	nn
   1	typeswitchcase	nnp
   1	repository	nn
   1	latter	nn
   1	indirects	vb
   1	shift	vb
   1	notation	nnp
   1	advance	nn
   1	advance	vb
   1	fuse	vb
   1	interface-valued	jj
   1	show	vb
   1	launch	vb
   1	non-constant	nn
   1	address	nnp
   1	receiver	nn
   1	conditionally	rb
   1	multi-way	jj
   1	ascii	nnp
   1	unnamed	jj
   1	mix	vb
   1	current	nnp
   1	function-local	jj
   1	exit	vb
   1	continue	nnp
   1	comma	nn
   1	document	vb
   1	size	nnp
   1	fully	rb
   1	recover	nn
   1	recent	jj
   1	partial	nn
   1	work	nn
   1	internal	jj
   1	unordered	jj
   1	spell	vb
   1	form	nnp
   1	stream	nn
   1	vet	vb
   1	overflow	nnp
   1	snippet	nn
   1	non-decimal	jj
   1	fraction	nn
   1	complext	nn
   1	resume	nn
   1	blank	nnp
   1	closure	nn
   1	disregard	vb
   1	n]e	nn
   1	quite	rb
   1	round-to-even	jj
   1	tuple	jj
   1	top-level	jj
   1	interpretation	nn
   1	environment	nn
   1	standard	nnp
   1	site	nn
   1	marker	nn
   1	underlie	vb
   1	usually	rb
   1	unary	nnp
   1	selection	nn
   1	raise	vb
   1	larg	jj
   1	simple	jj
   1	alert	nn
   1	multi-byte	nn
   1	placeholder	nn
   1	subtype	nn
   1	lo	nnp
   1	tabs	nn
   1	affect	vb
   1	traverse	vb
   1	width	nn
   1	pseudo-random	jj
   1	incur	vb
   1	m.sin	nn
   1	cycle	nn
   1	backspace	nn
   1	absent	vb
   1	reserf	nn
   1	backward	jj
   1	computation	nn
   1	test	vb
   1	imaginary	nnp
   1	raw	nnp
   1	room	nn
   1	predeclares	vb
   1	scoping	nn
   1	const	nn
   1	math.sin	nn
   1	non-type	jj
   1	sufficient	jj
   1	following	nn
   1	accordingly	rb
   1	finally	rb
   1	object	nn
   1	run	vb
   1	argument	nnp
   1	unit	nn
   1	x--	jj
   1	low-level	jj
   1	alias	nnp
   1	typename	nnp
   1	typename	nn
   1	value-receiver	jj
   1	release	nn
   1	floatt	nn
   1	see	nnp
   1	fused	jj
   1	lower	jjr
   1	non-complex	jj
   1	binding	nn
   1	table	nn
   1	x.f	nn
   1	issue	nn
   1	belong	nn
   1	generic	nn
   1	carriage	nnp
   1	miss	vb
   1	occupy	vb
   1	bell	nn
   1	reflection	nn
   1	behavior	nnp
   1	skips	pdt
   1	non-terminal	nn
   1	separate	vb
   1	long	jj
   1	get	vb
   1	power	nn
   1	modify	vb
   2	indication	nn
   2	associate	nn
   2	associate	vb
   2	erroneous	jj
   2	location	nn
   2	associativity	nn
   2	copy	nn
   2	meaning	nn
   2	right	vb
   2	recvexpr	nnp
   2	production_name	nn
   2	left	vb
   2	println	nns
   2	tab	nn
   2	octal	jj
   2	octal	nn
   2	non-generic	jj
   2	product	nn
   2	perform	vb
   2	contrast	nn
   2	relationship	nn
   2	prefix	vb
   2	callable	jj
   2	scale	vb
   2	short	nnp
   2	transitively	rb
   2	occur	vb
   2	functionality	nn
   2	wait	vb
   2	decrement	jj
   2	content	nn
   2	increase	vb
   2	replace	nnp
   2	adjust	vb
   2	trigger	vb
   2	rare	jj
   2	earli	jj
   2	sum	jj
   2	intermediate	jj
   2	option	nnp
   2	uint32	jj
   2	index	vb
   2	duplicate	vb
   2	mark	vb
   2	mark	nn
   2	here	rb
   2	inferrable	jj
   2	uninterpreted	jj
   2	typespec	nnp
   2	implementation-defined	jj
   2	specifically	rb
   2	imply	vb
   2	feed	nn
   2	repeated	jj
   2	jump	nn
   2	moment	nn
   2	defer	vb
   2	replacement	nn
   2	numbered	jj
   2	core	nnp
   2	readability	nn
   2	collectively	rb
   2	encoding	nn
   2	data	nns
   2	arise	nn
   2	backslash	nn
   2	architecture	vb
   2	non-exported	jj
   2	blocks	nnp
   2	result	nnp
   2	group	nnp
   2	unspecified	jj
   2	concatenation	nn
   2	limit	nn
   2	recursively	rb
   2	normally	rb
   2	not	nnp
   2	assume	vb
   2	negation	nn
   2	extent	nn
   2	reporting	nn
   2	local	jj
   2	pairwise	nn
   2	explicit	nnp
   2	parameter	nnp
   2	matching	nn
   2	importpath	nnp
   2	extended	jj
   2	non-interface	nn
   2	link	vb
   2	dependency	nnp
   2	resolve	vb
   2	forclause	nnp
   2	consequently	rb
   2	pointer-receiver	jj
   2	compile-time	jj
   2	soon	rb
   2	utf-8	nnp
   2	satisfied	jj
   2	independent	jj
   2	concrete	jj
   2	visible	jj
   2	increment	nn
   2	var	nn
   2	correct	jj
   2	block	nn
   2	accent	nn
   2	parsing	jj
   2	entire	jj
   2	base	vb
   2	state	nn
   2	iota	nn
   2	break	vb
   2	install	vb
   2	extend	vb
   2	differ	nn
   2	target	nn
   2	exclude	vb
   2	unqualified	jj
   2	sin	nnp
   2	available	jj
   2	correspond	vb
   2	lexically	rb
   2	float	vb
   2	embed	vb
   2	infer	nn
   2	uint16	jj
   2	name	nn
   2	exp	nn
   2	bound	nn
   2	elsewhere	rb
   2	share	vb
   2	n]t	nn
   2	attempt	nn
   2	panicking	nn
   2	accord	vb
   2	maximum	jj
   2	represent	jj
   2	well	rb
   2	unchanged	jj
   2	type	vb
   2	permissible	jj
   2	listing	vb
   2	previously	rb
   2	int64	nn
   2	nested	jj
   2	input	nn
   2	avoid	vb
   2	ready	jj
   2	notation	nn
   2	consequence	nn
   2	redeclaration	nn
   2	precise	jj
   2	come	vb
   2	requirement	nn
   2	rely	vb
   2	continue	nn
   2	indirectly	rb
   2	one-dimensional	jj
   2	ensure	vb
   2	point	vb
   2	partial	jj
   2	form	vb
   2	obtain	vb
   2	transfer	nn
   2	simpl	jj
   2	zero-size	jj
   2	tokens	jj
   2	dividend	nn
   2	later	rb
   2	enough	rb
   2	standard	vb
   2	standard	nn
   2	hidden	jj
   2	truth	nn
   2	discuss	vb
   2	opening	nn
   2	numeric	nnp
   2	equality	nn
   2	assist	vb
   2	scoped	nns
   2	unescaped	jj
   2	mask	nn
   2	radix	nn
   2	rune	nnp
   2	concurrently	rb
   2	hint	nn
   2	src	rb
   2	iterate	vb
   2	repetition	nnp
   2	repetition	nn
   2	multiple	nnp
   2	original	jj
   2	floatt	vb
   2	partially	rb
   2	shallowest	nn
   2	guard	nn
   2	place	vb
   2	literaltype	nnp
   2	enable	vb
   2	carriage	nn
   2	carry	vb
   2	separate	jj
   2	long	rb
   2	exact	jj
   2	retrieve	vb
   2	re-used	jj
   3	conditional	jj
   3	encode	vb
   3	indexing	nn
   3	select	nn
   3	say	vb
   3	entirely	rb
   3	vary	vb
   3	complex128	nn
   3	program	nnp
   3	parse	vb
   3	mechanism	nn
   3	vice	nn
   3	uint	jj
   3	tool	nn
   3	square	jj
   3	kind	nn
   3	flow	vb
   3	serve	vb
   3	horizontal	jj
   3	label	vb
   3	len	nnp
   3	comparison	nnp
   3	term	nnp
   3	underscore	nn
   3	identity	nn
   3	bidirectional	jj
   3	struct	nnp
   3	list	vb
   3	class	nn
   3	derive	vb
   3	taking	vb
   3	larger	jjr
   3	substring	nn
   3	switch	vb
   3	parenthesis	nn
   3	or	nnp
   3	similar	jj
   3	give	vb
   3	export	vb
   3	panic	vb
   3	speak	vb
   3	look	vb
   3	greater	jjr
   3	loosely	rb
   3	recvstmt	nnp
   3	treat	vb
   3	qualify	vb
   3	compatibility	nn
   3	implementation-specific	jj
   3	float64	nn
   3	universe	jj
   3	int8	jj
   3	int16	jj
   3	hexadecimal	jj
   3	identifierlist	nnp
   3	equal	jj
   3	complement	nn
   3	large	jj
   3	purpose	nn
   3	analysis	nn
   3	goroutine	nn
   3	entity	nn
   3	uint64	jj
   3	implementation-dependent	jj
   3	close	vb
   3	concatenate	vb
   3	buffer	vb
   3	false	jj
   3	concurrent	jj
   3	sign	jj
   3	keyword	nn
   3	receife	nn
   3	information	nn
   3	lib/math	nn
   3	assert	vb
   3	due	jj
   3	guarantee	nn
   3	directional	jj
   3	accessible	jj
   3	quotient	nn
   3	reach	vb
   3	process	nn
   3	relative	vb
   3	convenience	nn
   3	source	nnp
   3	item	nn
   3	complex64	jj
   3	share	nn
   3	save	vb
   3	word	nn
   3	nil	jj
   3	consisting	nn
   3	report	vb
   3	anonymous	jj
   3	alternative	jj
   3	instruction	nn
   3	property	nn
   3	note	nn
   3	particular	jj
   3	unable	jj
   3	write	vb
   3	address	vb
   3	channel	nn
   3	current	jj
   3	continue	vb
   3	document	nn
   3	arithmetic	jj
   3	arithmetic	nn
   3	infinity	nn
   3	unbuffered	jj
   3	integertype	nnp
   3	temporary	jj
   3	unary	jj
   3	immediately	rb
   3	mantissa	nn
   3	typeswitchguard	nnp
   3	successful	jj
   3	closing	vb
   3	handling	vb
   3	automatically	rb
   3	destination	nn
   3	versa	nn
   3	grammar	nn
   3	lt	nnp
   3	thus	nnp
   3	main	jj
   3	hand	nn
   3	only	rb
   3	place	nn
   3	high	jj
   3	generic	nnp
   3	generate	vb
   4	precisely	rb
   4	choose	vb
   4	complete	jj
   4	complete	vb
   4	static	jj
   4	terminate	nn
   4	labeled	jj
   4	slice	vb
   4	involve	vb
   4	various	jj
   4	init	nn
   4	divisor	nn
   4	brace	nn
   4	uint8	jj
   4	necessary	jj
   4	underscore	jj
   4	reference	vb
   4	order	vb
   4	upper	jj
   4	interpret	vb
   4	punctuation	nn
   4	skip	vb
   4	line	nn
   4	defer	nn
   4	arbitrarytype	nnp
   4	additionally	rb
   4	already	rb
   4	fit	vb
   4	therefore	rb
   4	pointer	nn
   4	identify	vb
   4	system	nn
   4	nth	jj
   4	compose	vb
   4	stand	vb
   4	individually	rb
   4	remove	vb
   4	truncate	vb
   4	constspec	nnp
   4	several	jj
   4	certain	jj
   4	single-valued	jj
   4	importing	nn
   4	left-to-right	jj
   4	more	rbr
   4	effect	nn
   4	variadic	jj
   4	op	jj
   4	infinite	jj
   4	utf-8	jj
   4	division	nn
   4	constraint	nnp
   4	satisfy	vb
   4	innermost	nn
   4	programming	nn
   4	category	nn
   4	optionally	rb
   4	float32	vb
   4	level	nn
   4	default	vb
   4	post	nn
   4	predeclared	vb
   4	bracket	nn
   4	remainder	nn
   4	guarantee	vb
   4	match	nn
   4	forever	rb
   4	syntax	nn
   4	float	nn
   4	accept	vb
   4	package-level	nn
   4	chan	vb
   4	append	vb
   4	substitute	vb
   4	lu	nnp
   4	anywhere	rb
   4	count	nn
   4	ieee	nnp
   4	less	jjr
   4	ready	vb
   4	way	nn
   4	representative	jj
   4	back	rb
   4	access	vb
   4	however	rb
   4	integer	jjr
   4	double	jj
   4	raw	jj
   4	refer	nn
   4	int32	nn
   4	memory	nn
   4	basic	jj
   4	production	nn
   4	behavior	nn
   4	restrict	vb
   5	copy	vb
   5	empty	rb
   5	sliced	jj
   5	print	nn
   5	replace	vb
   5	round	vb
   5	rounding	nn
   5	component	nn
   5	qualified	jj
   5	structure	nn
   5	constant	jj
   5	still	rb
   5	similarly	rb
   5	intersection	nn
   5	full	jj
   5	and	nnp
   5	inferred	jj
   5	construction	nn
   5	otherwise	vb
   5	receive	vb
   5	yield	vb
   5	ambiguity	nn
   5	uintptr	vb
   5	loop	nn
   5	just	rb
   5	discover	vb
   5	combine	vb
   5	packagename	nnp
   5	stop	vb
   5	process	vb
   5	embed	nn
   5	describe	vb
   5	introduce	vb
   5	directly	rb
   5	unifying	jj
   5	rather	rb
   5	n't	rb
   5	invalid	jj
   5	happen	vb
   5	disallow	vb
   5	closed	jj
   6	select	vb
   6	construct	nn
   6	sequence	vb
   6	precedence	nn
   6	prefix	nn
   6	reference	nn
   6	return	vb
   6	channels	vb
   6	backslash	jj
   6	else	rb
   6	panic	nn
   6	usual	jj
   6	previous	jj
   6	unify	vb
   6	promote	vb
   6	lexical	jj
   6	further	jj
   6	true	jj
   6	right-hand	jj
   6	addition	nn
   6	buffer	nn
   6	break	nn
   6	inner	jj
   6	caller	nn
   6	arbitrary	jj
   6	map	nn
   6	legal	jj
   6	shift	nn
   6	possible	jj
   6	alignment	nn
   6	end	vb
   6	access	nn
   6	occurs	nn
   6	logical	jj
   6	multi-valued	jj
   6	allow	vb
   6	absent	jj
   6	precede	vb
   6	invocation	nn
   6	thus	rb
   6	branch	nn
   6	belong	vb
   6	depth	nn
   6	indirection	nn
   7	fractional	jj
   7	remain	vb
   7	elide	vb
   7	instead	rb
   7	succeed	vb
   7	exist	vb
   7	actual	jj
   7	regular	jj
   7	together	rb
   7	discard	vb
   7	left-hand	jj
   7	primary	jj
   7	consist	vb
   7	hexadecimal	nn
   7	associated	jj
   7	instantiation	nn
   7	exception	nn
   7	exponent	nn
   7	support	vb
   7	binary	jj
   7	calling	vb
   7	surrounding	vb
   7	compute	vb
   7	received	jj
   7	yet	rb
   7	implicit	jj
   7	specification	nn
   7	bitwise	nn
   7	real	jj
   7	context	nn
   7	optional	jj
   8	terminate	vb
   8	store	vb
   8	occur	nn
   8	func	nn
   8	missing	jj
   8	representation	nn
   8	language	nn
   8	boolean	nn
   8	storage	nn
   8	pair	nn
   8	terminating	nn
   8	change	vb
   8	result	vb
   8	initial	jj
   8	exported	jj
   8	semicolon	nn
   8	individual	jj
   8	tag	nn
   8	dependency	nn
   8	direction	nn
   8	permit	vb
   8	determine	vb
   8	proceed	nn
   8	match	vb
   8	infer	vb
   8	apply	nn
   8	implementation	nn
   8	comment	nn
   8	enclose	vb
   8	overflow	nn
   8	simple	nn
   8	typed	jj
   9	present	jj
   9	construct	vb
   9	respectively	rb
   9	uninitialized	jj
   9	non-negative	jj
   9	int	nn
   9	non-empty	jj
   9	successive	jj
   9	act	vb
   9	produce	vb
   9	shorthand	nn
   9	require	vb
   9	make	vb
   9	even	rb
   9	explicitly	rb
   9	newline	nn
   9	hold	vb
   9	rune	nn
   9	last	jj
   9	allocate	vb
   9	space	nn
  10	additional	jj
  10	right	nn
  10	select	jj
  10	use	nn
  10	union	nn
  10	once	rb
  10	string	nn
  10	begin	vb
  10	general	jj
  10	known	vb
  10	escape	nn
  10	final	jj
  10	addressable	jj
  10	depend	vb
  10	control	vb
  10	proceed	vb
  10	assertion	nn
  10	block	vb
  10	variable	jj
  10	ordinary	jj
  10	import	vb
  10	next	jj
  10	implementation	nnp
  10	evaluation	nn
  10	pass	vb
  10	alias	nn
  11	present	vb
  11	most	jjs
  11	add	vb
  11	short	jj
  11	comparison	nn
  11	decimal	jj
  11	letter	nn
  11	ignore	vb
  11	package	nn
  11	signature	nn
  11	so	rb
  11	negative	jj
  11	multiple	nn
  11	bit	nn
  12	restriction	nn
  12	slice	nn
  12	never	rb
  12	label	nn
  12	except	vb
  12	sign	vb
  12	exactly	rb
  12	parenthesize	vb
  12	least	jjs
  12	unique	jj
  12	body	nn
  12	text	nn
  12	imaginary	jj
  12	phase	nn
  12	refer	vb
  12	see	vb
  13	dynamic	jj
  13	second	jj
  13	floating-point	jj
  13	embedded	jj
  13	side	nn
  13	unsigned	jj
  13	case	nn
  13	rune	nns
  13	non-blank	jj
  14	implicitly	rb
  14	index	nn
  14	step	nn
  14	invoke	vb
  14	non-interface	jj
  14	fail	vb
  14	distinct	jj
  14	illegal	jj
  14	compare	vb
  14	address	nn
  14	communication	nn
  14	compiler	nn
  15	program	nn
  15	valid	jj
  15	definition	nn
  15	token	nn
  15	more	jjr
  15	deferred	jj
  15	instantiate	vb
  15	section	nn
  15	non-constant	jj
  15	end	nn
  15	special	jj
  16	left	nn
  16	sequence	nn
  16	include	vb
  16	unification	nn
  16	quote	nn
  16	omit	vb
  16	consider	vb
  16	receive	nn
  16	cause	vb
  16	start	vb
  16	precision	nn
  17	representable	jj
  17	take	vb
  17	set	vb
  17	create	vb
  17	selector	nn
  17	blank	jj
  17	run	jj
  18	explicit	jj
  18	field	nn
  18	respective	jj
  18	then	rb
  18	error	nn
  18	digit	nn
  19	substitution	nn
  19	base	nn
  19	composite	jj
  19	interface	nn
  19	size	nn
  19	byte	nn
  20	comparable	jj
  20	numeric	jj
  20	always	rb
  21	bind	vb
  21	cannot	vb
  21	assignable	jj
  21	rule	nn
  21	time	nn
  22	return	nn
  22	boolean	jj
  22	equal	vb
  22	yield	nn
  22	be	vb
  22	provide	vb
  22	condition	nn
  22	generic	jj
  23	conversion	nn
  24	term	nn
  24	different	jj
  24	predeclared	jj
  24	instance	nn
  24	array	vb
  25	empty	jj
  25	assign	vb
  25	send	vb
  25	source	nn
  26	capacity	nn
  26	possibly	rb
  26	clause	nn
  26	part	nn
  27	entry	nn
  27	appear	vb
  27	equivalent	jj
  27	follow	vb
  28	execute	vb
  28	example	nn
  28	otherwise	rb
  28	point	nn
  29	new	jj
  29	apply	vb
  30	initialize	vb
  30	execution	nn
  30	implement	vb
  30	such	jj
  30	inference	nn
  31	floating-point	nn
  31	order	nn
  31	also	rb
  32	assignment	nn
  32	constraint	nn
  33	file	nn
  33	run-time	jj
  33	initialization	nn
  33	range	nn
  33	built-in	jj
  33	method	nn
  34	core	nn
  34	literal	nn
  34	following	vb
  35	specific	jj
  36	convert	vb
  36	name	vb
  36	corresponding	jj
  38	do	vb
  38	call	nn
  38	iteration	nn
  40	length	nn
  40	single	jj
  40	underlying	jj
  41	denote	vb
  41	key	nn
  41	number	nn
  41	integer	nn
  42	struct	nn
  43	complex	jj
  43	character	nn
  44	identical	jj
  45	given	vb
  46	evaluate	vb
  46	other	jj
  46	form	nn
  46	define	vb
  47	contain	vb
  48	specify	vb
  49	operator	nn
  49	operation	nn
  49	represent	vb
  49	function	nn
  52	there	ex
  53	integer	jj
  57	call	vb
  58	have	vb
  64	untyped	jj
  64	declare	vb
  70	result	nn
  73	use	vb
  74	array	nn
  75	list	nn
  76	operand	nn
  89	all	pdt
  92	declaration	nn
 101	identifier	nn
 101	set	nn
 124	value	nn
 134	element	nn
 138	argument	nn
 141	variable	nn
 146	statement	nn
 166	type	nn
 170	constant	nn
 177	parameter	nn
 185	expression	nn
