and            	 nnp => and            	 nnp	:b-gpe
and            	 nnp => and            	 nnp	:b-person
ascii          	 nnp => ascii          	 nnp	:b-gpe
accordingly    	  rb => accordingly    	  rb	:o
additionally   	  rb => additionally   	  rb	:o
address        	 nnp => address        	 nnp	:o
alias          	 nnp => alias          	 nnp	:o
allocation     	 nnp => allocation     	 nnp	:o
also           	  rb => also           	  rb	:o
alternative    	  jj => alternative    	  jj	:o
appending      	 vbg => append         	  vb	:o
applying       	 vbg => apply          	  vb	:o
arbitrarytype  	 nnp => arbitrarytype  	 nnp	:o
argument       	 nnp => argument       	 nnp	:o
arithmetic     	  jj => arithmetic     	  jj	:b-gpe
array          	  nn => array          	  nn	:o
assignability  	 nnp => assignability  	 nnp	:o
assigning      	 vbg => assign         	  vb	:o
assignment     	 nnp => assignment     	 nnp	:o
assignments    	 nnp => assignments    	 nnp	:o
assume         	 nnp => assume         	 nnp	:o
backus-naur    	  jj => backus-naur    	  jj	:o
basic          	  jj => basic          	  jj	:o
behavior       	 nnp => behavior       	 nnp	:i-organization
binary         	 nnp => binary         	 nnp	:o
blank          	 nnp => blank          	 nnp	:b-person
blocks         	 nnp => blocks         	 nnp	:b-person
boolean        	  jj => boolean        	  jj	:b-gpe
bootstrapping  	 nnp => bootstrapping  	 nnp	:o
break          	 nnp => break          	 nnp	:o
built-in       	  jj => built-in       	  jj	:o
call           	  vb => call           	  vb	:o
calling        	 vbg => calling        	  vb	:o
calls          	 vbz => call           	  vb	:o
camelcase      	 nnp => camelcase      	 nnp	:b-gpe
carriage       	 nnp => carriage       	 nnp	:o
cases          	 nns => case           	  nn	:o
category       	 nnp => category       	 nnp	:o
channels       	 nnp => channels       	 nnp	:o
characters     	nnps => character      	  nn	:o
close          	 nnp => close          	 nnp	:o
closing        	 vbg => closing        	  vb	:o
comments       	 nns => comment        	  nn	:o
communication  	  nn => communication  	  nn	:o
comparison     	 nnp => comparison     	 nnp	:o
comparisons    	 nns => comparison     	  nn	:o
complex        	  jj => complex        	  jj	:o
composite      	  jj => composite      	  jj	:o
computer       	 nnp => computer       	 nnp	:o
consequently   	  rb => consequently   	  rb	:o
consider       	  vb => consider       	  vb	:o
constspec      	 nnp => constspec      	 nnp	:o
constant       	  jj => constant       	  jj	:o
constants      	 nns => constant       	  nn	:o
constraint     	 nnp => constraint     	 nnp	:o
continue       	 nnp => continue       	 nnp	:o
conversions    	 nns => conversion     	  nn	:o
converting     	 vbg => convert        	  vb	:o
core           	 nnp => core           	 nnp	:b-gpe
current        	 nnp => current        	 nnp	:o
declarations   	 nns => declaration    	  nn	:o
defer          	 nnp => defer          	 nnp	:o
deletion       	  nn => deletion       	  nn	:o
dependency     	 nnp => dependency     	 nnp	:o
ebnf           	 nnp => ebnf           	 nnp	:b-gpe
earlier        	 jjr => earlier        	 jjr	:o
elements       	 nns => element        	  nn	:o
embedded       	  jj => embedded       	  jj	:o
embeddedfield  	 nnp => embeddedfield  	 nnp	:b-gpe
empty          	  jj => empty          	  jj	:o
errors         	nnps => error          	  nn	:o
even           	  rb => even           	  rb	:o
example        	  nn => example        	  nn	:o
examples       	 nns => example        	  nn	:o
excluding      	 nnp => excluding      	 nnp	:o
executing      	 vbg => execute        	  vb	:o
execution      	  nn => execution      	  nn	:o
explicit       	 nnp => explicit       	 nnp	:b-person
exported       	 vbd => export         	  vb	:o
expression     	  nn => expression     	  nn	:o
expressionlist 	 nnp => expressionlist 	 nnp	:o
expressions    	 nns => expression     	  nn	:o
extended       	  jj => extended       	  jj	:o
fma            	 nnp => fma            	 nnp	:o
first          	 nnp => first          	 nnp	:o
floating-point 	  jj => floating-point 	  jj	:o
forclause      	 nnp => forclause      	 nnp	:o
form           	 nnp => form           	 nnp	:o
full           	 nnp => full           	 nnp	:o
functions      	 nns => function       	  nn	:o
further        	  jj => further        	  jj	:o
general        	  jj => general        	  jj	:o
general        	 nnp => general        	 nnp	:o
generally      	 nnp => generally      	 nnp	:o
generic        	 nnp => generic        	 nnp	:o
give           	  vb => give           	  vb	:o
given          	 vbn => given          	  vb	:o
graphic        	 nnp => graphic        	 nnp	:b-gpe
group          	 nnp => group          	 nnp	:b-person
handling       	 vbg => handling       	  vb	:o
here           	  rb => here           	  rb	:o
hexadecimal    	 nnp => hexadecimal    	 nnp	:o
however        	  rb => however        	  rb	:o
ieee           	 nnp => ieee           	 nnp	:o
identifierlist 	 nnp => identifierlist 	 nnp	:o
identifiers    	nnps => identifier     	  nn	:o
imaginary      	 nnp => imaginary      	 nnp	:o
implementation 	 nnp => implementation 	 nnp	:o
implementing   	 vbg => implement      	  vb	:o
importpath     	 nnp => importpath     	 nnp	:b-gpe
importpaths    	 nnp => importpaths    	 nnp	:o
inference      	  nn => inference      	  nn	:o
initialization 	 nnp => initialization 	 nnp	:o
instantiating  	 vbg => instantiate    	  vb	:o
instantiation  	 nnp => instantiation  	 nnp	:o
instantiations 	 vbz => instantiation  	  vb	:o
instead        	  rb => instead        	  rb	:o
integer        	 jjr => integer        	 jjr	:o
integertype    	 nnp => integertype    	 nnp	:o
interfaces     	 nns => interface      	  nn	:o
interpreted    	 vbn => interpret      	  vb	:o
introduction   	  nn => introduction   	  nn	:o
iota           	 nnp => iota           	 nnp	:o
just           	  rb => just           	  rb	:o
keywords       	  vb => keywords       	  vb	:o
label          	 nnp => label          	 nnp	:b-person
labeled        	 vbn => label          	  vb	:o
labels         	 nnp => labels         	 nnp	:b-gpe
language       	 nnp => language       	 nnp	:o
length         	 nnp => length         	 nnp	:b-person
letter         	 nnp => letter         	 nnp	:o
letters        	 nns => letter         	  nn	:o
lexical        	  jj => lexical        	  jj	:o
line           	 nnp => line           	 nnp	:o
literaltype    	 nnp => literaltype    	 nnp	:b-gpe
ll             	 nnp => ll             	 nnp	:b-gpe
lm             	 nnp => lm             	 nnp	:b-gpe
lo             	 nnp => lo             	 nnp	:o
local          	 nnp => local          	 nnp	:b-person
logical        	  jj => logical        	  jj	:o
loosely        	  rb => loosely        	  rb	:o
lower-case     	 nnp => lower-case     	 nnp	:o
lt             	 nnp => lt             	 nnp	:b-gpe
lu             	 nnp => lu             	 nnp	:b-gpe
lu             	 nnp => lu             	 nnp	:o
lu.            	 nnp => lu.            	 nnp	:o
making         	 vbg => make           	  vb	:o
manipulating   	 vbg => manipulate     	  vb	:o
missing        	 vbg => miss           	  vb	:o
more           	 rbr => more           	 rbr	:o
moreover       	  rb => moreover       	  rb	:o
multiple       	 nnp => multiple       	 nnp	:o
multiplication 	  nn => multiplication 	  nn	:o
not            	 nnp => not            	 nnp	:b-person
not            	 nnp => not            	 nnp	:o
nul            	 nnp => nul            	 nnp	:b-gpe
nan            	 nnp => nan            	 nnp	:o
nd             	 nnp => nd             	 nnp	:o
next           	  jj => next           	  jj	:o
non-exported   	  jj => non-exported   	  jj	:o
non-terminals  	 nns => non-terminal   	  nn	:o
notation       	 nnp => notation       	 nnp	:o
note           	  nn => note           	  nn	:o
number         	 nnp => number         	 nnp	:o
numeric        	 nnp => numeric        	 nnp	:o
or             	 nnp => or             	 nnp	:o
octal          	  jj => octal          	  jj	:o
omitted        	 vbn => omit           	  vb	:o
omitting       	 vbg => omit           	  vb	:o
only           	  rb => only           	  rb	:o
operands       	 nns => operand        	  nn	:o
operator       	  nn => operator       	  nn	:o
operators      	nnps => operator       	  nn	:o
option         	 nnp => option         	 nnp	:b-person
order          	  nn => order          	  nn	:o
others         	 nns => other          	  nn	:o
otherwise      	  rb => otherwise      	  rb	:o
otherwise      	  vb => otherwise      	  vb	:o
overflow       	 nnp => overflow       	 nnp	:b-person
packagename    	 nnp => packagename    	 nnp	:b-gpe
packages       	 nns => package        	  nn	:o
parameter      	 nnp => parameter      	 nnp	:b-person
passing        	 vbg => pass           	  vb	:o
pointers       	 nns => pointer        	  nn	:o
precedence     	  nn => precedence     	  nn	:o
predeclared    	 vbd => predeclared    	  vb	:o
primary        	  jj => primary        	  jj	:o
production     	  nn => production     	  nn	:o
productions    	 nns => production     	  nn	:o
program        	 nnp => program        	 nnp	:o
programming    	 nnp => programming    	 nnp	:o
programs       	 nns => program        	  nn	:o
promoted       	 vbn => promote        	  vb	:o
properties     	 nns => property       	  nn	:o
qualified      	 vbn => qualify        	  vb	:o
range          	 nnp => range          	 nnp	:o
raw            	 nnp => raw            	 nnp	:o
receive        	 nnp => receive        	 nnp	:o
receiving      	 vbg => receive        	  vb	:o
recvexpr       	 nnp => recvexpr       	 nnp	:b-gpe
recvstmt       	 nnp => recvstmt       	 nnp	:o
redeclaration  	  nn => redeclaration  	  nn	:o
regardless     	 nnp => regardless     	 nnp	:o
repetition     	 nnp => repetition     	 nnp	:o
replace        	 nnp => replace        	 nnp	:o
represent      	  jj => represent      	  jj	:o
representability	 nnp => representability	 nnp	:o
result         	 nnp => result         	 nnp	:b-gpe
round          	 nnp => round          	 nnp	:o
rounding       	 vbg => round          	  vb	:o
run-time       	  jj => run-time       	  jj	:o
rune           	 nnp => rune           	 nnp	:o
second         	 nnp => second         	 nnp	:o
section        	  nn => section        	  nn	:o
sections       	 nns => section        	  nn	:o
see            	 nnp => see            	 nnp	:b-person
select         	  jj => select         	  jj	:o
selectors      	 nns => selector       	  nn	:o
semicolons     	nnps => semicolon      	  nn	:o
send           	  jj => send           	  jj	:o
sending        	 vbg => send           	  vb	:o
several        	  jj => several        	  jj	:o
shifts         	 nns => shift          	  nn	:o
short          	 nnp => short          	 nnp	:o
shortvardecl   	 nnp => shortvardecl   	 nnp	:o
similarly      	  rb => similarly      	  rb	:o
simple         	  jj => simple         	  jj	:o
sin            	 nnp => sin            	 nnp	:o
size           	 nnp => size           	 nnp	:b-person
source         	 nnp => source         	 nnp	:b-gpe
specific       	  jj => specific       	  jj	:o
specifically   	  rb => specifically   	  rb	:o
specification  	 nnp => specification  	 nnp	:o
standard       	 nnp => standard       	 nnp	:o
starting       	 vbg => start          	  vb	:o
statements     	 nns => statement      	  nn	:o
stop           	  vb => stop           	  vb	:o
strings        	 nns => string         	  nn	:o
struct         	 nnp => struct         	 nnp	:o
structured     	 nnp => structured     	 nnp	:o
such           	  jj => such           	  jj	:o
suppose        	  vb => suppose        	  vb	:o
syntactically  	  rb => syntactically  	  rb	:o
system         	  nn => system         	  nn	:o
taking         	 vbg => taking         	  vb	:o
term           	 nnp => term           	 nnp	:b-person
terminating    	 vbg => terminate      	  vb	:o
there          	  ex => there          	  ex	:o
therefore      	  rb => therefore      	  rb	:o
thus           	 nnp => thus           	 nnp	:o
thus           	  rb => thus           	  rb	:o
together       	  rb => together       	  rb	:o
tokens         	  jj => tokens         	  jj	:b-gpe
typename       	  nn => typename       	  nn	:o
typename       	 nnp => typename       	 nnp	:b-gpe
typespec       	 nnp => typespec       	 nnp	:b-gpe
typeswitchcase 	 nnp => typeswitchcase 	 nnp	:o
typeswitchguard	 nnp => typeswitchguard	 nnp	:b-gpe
types          	 nns => type           	  nn	:o
types          	 vbz => type           	  vb	:o
utf-8          	  jj => utf-8          	  jj	:o
utf-8          	 nnp => utf-8          	 nnp	:b-gpe
unary          	 nnp => unary          	 nnp	:o
underlying     	 vbg => underlie       	  vb	:o
unification    	  nn => unification    	  nn	:o
union          	 nnp => union          	 nnp	:o
uniqueness     	 nnp => uniqueness     	 nnp	:o
untyped        	  jj => untyped        	  jj	:o
using          	 vbg => use            	  vb	:o
values         	 nns => value          	  nn	:o
varspec        	 nnp => varspec        	 nnp	:b-gpe
variable       	  jj => variable       	  jj	:o
variables      	 nns => variable       	  nn	:o
white          	 nnp => white          	 nnp	:b-person
xor            	  nn => xor            	  nn	:o
zero           	 nnp => zero           	 nnp	:o
absent         	  jj => absent         	  jj	:o
absent         	 vbn => absent         	  vb	:o
accent         	  nn => accent         	  nn	:o
accented       	  jj => accented       	  jj	:o
accept         	  vb => accept         	  vb	:o
accepts        	 vbz => accept         	  vb	:o
access         	  nn => access         	  nn	:o
accessed       	 vbn => access         	  vb	:o
accesses       	 vbz => access         	  vb	:o
accessible     	  jj => accessible     	  jj	:o
accommodate    	  vb => accommodate    	  vb	:o
according      	 vbg => accord         	  vb	:o
accurately     	  rb => accurately     	  rb	:o
act            	 vbp => act            	  vb	:o
acts           	 vbz => act            	  vb	:o
actual         	  jj => actual         	  jj	:o
add            	  vb => add            	  vb	:o
added          	 vbn => add            	  vb	:o
adding         	 vbg => add            	  vb	:o
addition       	  nn => addition       	  nn	:o
additional     	  jj => additional     	  jj	:o
additionally   	  rb => additionally   	  rb	:o
address        	  nn => address        	  nn	:o
addressability 	  nn => addressability 	  nn	:o
addressable    	  jj => addressable    	  jj	:o
addressed      	 vbn => address        	  vb	:o
addresses      	 nns => address        	  nn	:o
adds           	 vbz => add            	  vb	:o
adjusted       	 vbn => adjust         	  vb	:o
advance        	  vb => advance        	  vb	:o
advances       	 nns => advance        	  nn	:o
affect         	 vbp => affect         	  vb	:o
alert          	  nn => alert          	  nn	:o
alias          	  nn => alias          	  nn	:o
aligned        	 vbn => align          	  vb	:o
alignment      	  nn => alignment      	  nn	:o
all            	 pdt => all            	 pdt	:o
allocated      	 vbn => allocate       	  vb	:o
allocates      	 vbz => allocate       	  vb	:o
allocating     	 vbg => allocate       	  vb	:o
allow          	 vbp => allow          	  vb	:o
allowed        	 vbn => allow          	  vb	:o
allowing       	 vbg => allow          	  vb	:o
allows         	 vbz => allow          	  vb	:o
alone          	  rb => alone          	  rb	:o
already        	  rb => already        	  rb	:o
also           	  rb => also           	  rb	:o
alternation    	  nn => alternation    	  nn	:o
alternatives   	 nns => alternative    	  nn	:o
always         	  rb => always         	  rb	:o
ambiguity      	  nn => ambiguity      	  nn	:o
analysis       	  nn => analysis       	  nn	:o
analyzed       	 vbn => analyze        	  vb	:o
anew           	  rb => anew           	  rb	:o
annotated      	 vbn => annotate       	  vb	:o
anonymous      	  jj => anonymous      	  jj	:o
anywhere       	  rb => anywhere       	  rb	:o
appear         	 vbp => appear         	  vb	:o
appears        	 vbz => appear         	  vb	:o
append         	  vb => append         	  vb	:o
appends        	 vbz => append         	  vb	:o
applied        	 vbd => apply          	  vb	:o
applies        	 nns => apply          	  nn	:o
apply          	  vb => apply          	  vb	:o
apply          	 vbp => apply          	  vb	:o
applying       	 vbg => apply          	  vb	:o
approximately  	  rb => approximately  	  rb	:o
arbitrary      	  jj => arbitrary      	  jj	:o
architecture   	  nn => architecture   	  nn	:o
architecture-independent	  jj => architecture-independent	  jj	:o
architectures  	 vbz => architecture   	  vb	:o
argument       	  nn => argument       	  nn	:o
arguments      	 nns => argument       	  nn	:o
arises         	 nns => arise          	  nn	:o
arithmetic     	  jj => arithmetic     	  jj	:o
arithmetic     	  nn => arithmetic     	  nn	:o
array          	  nn => array          	  nn	:o
array          	  vb => array          	  vb	:o
arrays         	 nns => array          	  nn	:o
assemble       	  jj => assemble       	  jj	:o
assembly       	  nn => assembly       	  nn	:o
assertion      	  nn => assertion      	  nn	:o
assertions     	 nns => assertion      	  nn	:o
asserts        	 vbz => assert         	  vb	:o
assign         	  vb => assign         	  vb	:o
assignable     	  jj => assignable     	  jj	:o
assigned       	 vbn => assign         	  vb	:o
assigning      	 vbg => assign         	  vb	:o
assignment     	  nn => assignment     	  nn	:o
assignments    	 nns => assignment     	  nn	:o
assigns        	 vbz => assign         	  vb	:o
assist         	  vb => assist         	  vb	:o
associate      	  nn => associate      	  nn	:o
associated     	  jj => associated     	  jj	:o
associates     	 vbz => associate      	  vb	:o
associativity  	  nn => associativity  	  nn	:o
assume         	  vb => assume         	  vb	:o
assumption     	  nn => assumption     	  nn	:o
attempt        	  nn => attempt        	  nn	:o
attempting     	 vbg => attempt        	  vb	:o
attempts       	 nns => attempt        	  nn	:o
attribute      	  nn => attribute      	  nn	:o
automatic      	  jj => automatic      	  jj	:o
automatically  	  rb => automatically  	  rb	:o
available      	  jj => available      	  jj	:o
avoid          	  vb => avoid          	  vb	:o
back           	  rb => back           	  rb	:o
backslash      	  jj => backslash      	  jj	:o
backslash      	  nn => backslash      	  nn	:o
backslashes    	 nns => backslash      	  nn	:o
backspace      	  nn => backspace      	  nn	:o
backward       	  jj => backward       	  jj	:o
base           	  nn => base           	  nn	:o
based          	 vbn => base           	  vb	:o
basic          	  jj => basic          	  jj	:o
becomes        	 vbz => become         	  vb	:o
been           	 vbn => be             	  vb	:o
beginning      	 vbg => begin          	  vb	:o
begins         	 nns => begin          	  nn	:o
begins         	 vbz => begin          	  vb	:o
behave         	 vbp => behave         	  vb	:o
behavior       	  nn => behavior       	  nn	:o
being          	 vbg => be             	  vb	:o
bell           	  nn => bell           	  nn	:o
belonging      	 vbg => belong         	  vb	:o
belongs        	 nns => belong         	  nn	:o
belongs        	 vbz => belong         	  vb	:o
bidirectional  	  jj => bidirectional  	  jj	:o
binary         	  jj => binary         	  jj	:o
bind           	 vbp => bind           	  vb	:o
binding        	  nn => binding        	  nn	:o
binding        	 vbg => bind           	  vb	:o
binds          	 vbz => bind           	  vb	:o
bit            	  nn => bit            	  nn	:o
bits           	 nns => bit            	  nn	:o
bitwise        	  nn => bitwise        	  nn	:o
blank          	  jj => blank          	  jj	:o
blocking       	 vbg => block          	  vb	:o
blocks         	 nns => block          	  nn	:o
blocks         	 vbz => block          	  vb	:o
body           	  nn => body           	  nn	:o
bool           	  nn => bool           	  nn	:o
boolean        	  jj => boolean        	  jj	:o
boolean        	  nn => boolean        	  nn	:o
booleans       	 nns => boolean        	  nn	:o
bootstrapping  	 vbg => bootstrap      	  vb	:o
bound          	  nn => bound          	  nn	:o
bound          	 vbn => bind           	  vb	:o
bounds         	 nns => bound          	  nn	:o
brace          	  nn => brace          	  nn	:o
brace-bound    	  jj => brace-bound    	  jj	:o
braces         	 nns => brace          	  nn	:o
brackets       	 nns => bracket        	  nn	:o
branch         	  nn => branch         	  nn	:o
branches       	 nns => branch         	  nn	:o
break          	  nn => break          	  nn	:o
breaking       	 vbg => break          	  vb	:o
broken         	 vbn => break          	  vb	:o
buffer         	  nn => buffer         	  nn	:o
buffered       	 vbd => buffer         	  vb	:o
build          	  jj => build          	  jj	:o
built-in       	  jj => built-in       	  jj	:o
built-ins      	 nns => built-in       	  nn	:o
byte-wise      	  nn => byte-wise      	  nn	:o
bytes          	 nns => byte           	  nn	:o
calculated     	 vbn => calculate      	  vb	:o
call           	  nn => call           	  nn	:o
callable       	  jj => callable       	  jj	:o
called         	 vbd => call           	  vb	:o
called         	 vbn => call           	  vb	:o
caller         	  nn => caller         	  nn	:o
callers        	 nns => caller         	  nn	:o
calling        	 vbg => calling        	  vb	:o
calls          	 nns => call           	  nn	:o
calls          	 vbz => call           	  vb	:o
cannot         	 vbp => cannot         	  vb	:o
canonicalized  	 vbn => canonicalized  	  vb	:o
cap            	  nn => cap            	  nn	:o
capacity       	  nn => capacity       	  nn	:o
carriage       	  nn => carriage       	  nn	:o
carried        	 vbn => carry          	  vb	:o
cases          	 nns => case           	  nn	:o
categories     	 nns => category       	  nn	:o
category       	  nn => category       	  nn	:o
cause          	  vb => cause          	  vb	:o
causes         	 vbz => cause          	  vb	:o
causing        	 vbg => cause          	  vb	:o
certain        	  jj => certain        	  jj	:o
chan           	 vbp => chan           	  vb	:o
change         	 vbp => change         	  vb	:o
changes        	 vbz => change         	  vb	:o
channels       	 nns => channel        	  nn	:o
channels       	  vb => channels       	  vb	:o
character      	  nn => character      	  nn	:o
characters     	 nns => character      	  nn	:o
choice         	  nn => choice         	  nn	:o
chooses        	 vbz => choose         	  vb	:o
chosen         	 vbn => choose         	  vb	:o
circumstances  	 nns => circumstance   	  nn	:o
class          	  nn => class          	  nn	:o
classes        	 nns => class          	  nn	:o
clause         	  nn => clause         	  nn	:o
clauses        	 nns => clause         	  nn	:o
clear          	  jj => clear          	  jj	:o
close          	  rb => close          	  rb	:o
closed         	  jj => closed         	  jj	:o
closed         	 vbn => close          	  vb	:o
closing        	 vbg => closing        	  vb	:o
closures       	 nns => closure        	  nn	:o
collectively   	  rb => collectively   	  rb	:o
combine        	  vb => combine        	  vb	:o
combining      	 vbg => combine        	  vb	:o
come           	  vb => come           	  vb	:o
comma          	  nn => comma          	  nn	:o
comment        	  nn => comment        	  nn	:o
comments       	 nns => comment        	  nn	:o
common         	  jj => common         	  jj	:o
communicate    	  vb => communicate    	  vb	:o
communication  	  nn => communication  	  nn	:o
communications 	 nns => communication  	  nn	:o
compact        	  jj => compact        	  jj	:o
comparable     	  jj => comparable     	  jj	:o
compare        	 vbp => compare        	  vb	:o
compared       	 vbn => compare        	  vb	:o
compares       	 vbz => compare        	  vb	:o
comparing      	 vbg => compare        	  vb	:o
comparison     	  nn => comparison     	  nn	:o
comparisons    	 nns => comparison     	  nn	:o
compatibility  	  nn => compatibility  	  nn	:o
compile        	  jj => compile        	  jj	:o
compile-time   	  jj => compile-time   	  jj	:o
compiler       	  nn => compiler       	  nn	:o
compilers      	 nns => compiler       	  nn	:o
complement     	  nn => complement     	  nn	:o
complete       	  jj => complete       	  jj	:o
complete       	  vb => complete       	  vb	:o
completely     	  rb => completely     	  rb	:o
completeness   	  nn => completeness   	  nn	:o
completes      	 vbz => complete       	  vb	:o
complex        	  jj => complex        	  jj	:o
complex128     	  nn => complex128     	  nn	:o
complex64      	  jj => complex64      	  jj	:o
complext       	  nn => complext       	  nn	:b-organization
component      	  nn => component      	  nn	:o
components     	 nns => component      	  nn	:o
composed       	 vbn => compose        	  vb	:o
composes       	 vbz => compose        	  vb	:o
composite      	  jj => composite      	  jj	:o
computation    	  nn => computation    	  nn	:o
computed       	 vbn => compute        	  vb	:o
computes       	 vbz => compute        	  vb	:o
computing      	 vbg => compute        	  vb	:o
concatenated   	 vbn => concatenate    	  vb	:o
concatenating  	 vbg => concatenate    	  vb	:o
concatenation  	  nn => concatenation  	  nn	:o
concrete       	  jj => concrete       	  jj	:o
concurrent     	  jj => concurrent     	  jj	:o
concurrently   	  rb => concurrently   	  rb	:o
condition      	  nn => condition      	  nn	:o
conditional    	  jj => conditional    	  jj	:o
conditionally  	  rb => conditionally  	  rb	:o
conditions     	 nns => condition      	  nn	:o
conflict       	  vb => conflict       	  vb	:o
consequence    	  nn => consequence    	  nn	:o
consider       	  vb => consider       	  vb	:o
considerations 	 nns => consideration  	  nn	:o
considered     	 vbn => consider       	  vb	:o
considering    	 vbg => consider       	  vb	:o
considers      	 vbz => consider       	  vb	:o
consist        	 vbp => consist        	  vb	:o
consisting     	  nn => consisting     	  nn	:o
consists       	 vbz => consist        	  vb	:o
const          	  nn => const          	  nn	:o
constant       	  jj => constant       	  jj	:o
constant       	  nn => constant       	  nn	:o
constants      	 nns => constant       	  nn	:o
constituents   	 nns => constituent    	  nn	:o
constrained    	 vbn => constrain      	  vb	:o
constraint     	  nn => constraint     	  nn	:o
constraints    	 nns => constraint     	  nn	:o
construct      	  nn => construct      	  nn	:o
constructed    	 vbn => construct      	  vb	:o
construction   	  nn => construction   	  nn	:o
constructs     	 vbz => construct      	  vb	:o
contain        	  vb => contain        	  vb	:o
containing     	 vbg => contain        	  vb	:o
contains       	 nns => contain        	  nn	:o
contains       	 vbz => contain        	  vb	:o
contents       	 nns => content        	  nn	:o
context        	  nn => context        	  nn	:o
contexts       	 nns => context        	  nn	:o
contiguous     	  jj => contiguous     	  jj	:o
continue       	  nn => continue       	  nn	:o
continue       	 vbp => continue       	  vb	:o
continues      	 vbz => continue       	  vb	:o
contrast       	  nn => contrast       	  nn	:o
control        	  nn => control        	  nn	:o
control        	 vbp => control        	  vb	:o
controlled     	 vbn => control        	  vb	:o
controls       	 vbz => control        	  vb	:o
convenience    	  nn => convenience    	  nn	:o
conventional   	  jj => conventional   	  jj	:o
conversion     	  nn => conversion     	  nn	:o
conversions    	 nns => conversion     	  nn	:o
convert        	  vb => convert        	  vb	:o
converted      	 vbn => convert        	  vb	:o
converting     	 vbg => convert        	  vb	:o
copied         	 vbn => copy           	  vb	:o
copies         	 vbz => copy           	  vb	:o
copy           	  nn => copy           	  nn	:o
copying        	 vbg => copy           	  vb	:o
core           	  nn => core           	  nn	:o
correct        	  jj => correct        	  jj	:o
correspond     	  nn => correspond     	  nn	:o
corresponding  	  jj => corresponding  	  jj	:o
corresponds    	 vbz => correspond     	  vb	:o
cost           	  nn => cost           	  nn	:o
count          	  nn => count          	  nn	:o
create         	  vb => create         	  vb	:o
created        	 vbn => create         	  vb	:o
creates        	 vbz => create         	  vb	:o
creation       	  nn => creation       	  nn	:o
curly          	  rb => curly          	  rb	:o
current        	  jj => current        	  jj	:o
cycles         	 nns => cycle          	  nn	:o
cyclic         	  jj => cyclic         	  jj	:o
data           	 nns => data           	 nns	:o
decimal        	  jj => decimal        	  jj	:o
declaration    	  nn => declaration    	  nn	:o
declarations   	 nns => declaration    	  nn	:o
declare        	  vb => declare        	  vb	:o
declared       	 vbn => declare        	  vb	:o
declares       	 vbz => declare        	  vb	:o
decrement      	  jj => decrement      	  jj	:o
deduce         	  vb => deduce         	  vb	:o
defaults       	 vbz => default        	  vb	:o
defer          	  nn => defer          	  nn	:o
deferred       	  jj => deferred       	  jj	:o
deferred       	 vbn => defer          	  vb	:o
defers         	 vbz => defer          	  vb	:o
define         	  vb => define         	  vb	:o
defined        	 vbn => define         	  vb	:o
defines        	 vbz => define         	  vb	:o
defining       	 vbg => define         	  vb	:o
definition     	  nn => definition     	  nn	:o
definitions    	 nns => definition     	  nn	:o
delete         	  nn => delete         	  nn	:o
delivered      	 vbn => deliver        	  vb	:o
denote         	 vbp => denote         	  vb	:o
denoted        	 vbn => denote         	  vb	:o
denotes        	 vbz => denote         	  vb	:o
denoting       	 vbg => denote         	  vb	:o
depend         	  vb => depend         	  vb	:o
dependencies   	 nns => dependency     	  nn	:o
dependency     	  nn => dependency     	  nn	:o
depending      	 vbg => depend         	  vb	:o
depends        	 vbz => depend         	  vb	:o
depth          	  nn => depth          	  nn	:o
dereference    	  vb => dereference    	  vb	:o
dereferenced   	 vbn => dereferenced   	  vb	:o
derive         	  vb => derive         	  vb	:o
derived        	 vbn => derive         	  vb	:o
described      	 vbn => describe       	  vb	:o
describes      	 vbz => describe       	  vb	:o
descriptor     	  nn => descriptor     	  nn	:o
designed       	 vbn => design         	  vb	:o
destination    	  nn => destination    	  nn	:o
detail         	  nn => detail         	  nn	:o
determine      	  vb => determine      	  vb	:o
determined     	 vbn => determine      	  vb	:o
determines     	 vbz => determine      	  vb	:o
deterministically	  rb => deterministically	  rb	:o
development    	  nn => development    	  nn	:o
did            	 vbd => do             	  vb	:o
differ         	  vb => differ         	  vb	:o
difference     	  nn => difference     	  nn	:o
different      	  jj => different      	  jj	:o
differently    	  rb => differently    	  rb	:o
differs        	 nns => differ         	  nn	:o
digits         	 nns => digit          	  nn	:o
direct         	  vb => direct         	  vb	:o
direction      	  nn => direction      	  nn	:o
directional    	  jj => directional    	  jj	:o
directly       	  rb => directly       	  rb	:o
directory      	  nn => directory      	  nn	:o
disallow       	  vb => disallow       	  vb	:o
disallowed     	 vbn => disallow       	  vb	:o
disassemble    	  jj => disassemble    	  jj	:o
discard        	  vb => discard        	  vb	:o
discarded      	 vbn => discard        	  vb	:o
discovered     	 vbn => discover       	  vb	:o
discussed      	 vbn => discuss        	  vb	:o
discussion     	  nn => discussion     	  nn	:o
disjoint       	  nn => disjoint       	  nn	:o
disregarding   	 vbg => disregard      	  vb	:o
distinct       	  jj => distinct       	  jj	:o
divided        	 vbn => divide         	  vb	:o
dividend       	  nn => dividend       	  nn	:o
division       	  nn => division       	  nn	:o
divisor        	  nn => divisor        	  nn	:o
do             	 vbp => do             	  vb	:o
document       	  nn => document       	  nn	:o
documentation  	  nn => documentation  	  nn	:o
documented     	 vbn => document       	  vb	:o
documents      	 nns => document       	  nn	:o
does           	 vbz => do             	  vb	:o
done           	 vbn => do             	  vb	:o
double         	  jj => double         	  jj	:o
due            	  jj => due            	  jj	:o
duplicate      	  vb => duplicate      	  vb	:o
dynamic        	  jj => dynamic        	  jj	:o
dynamically    	  rb => dynamically    	  rb	:o
earlier        	 rbr => earlier        	 rbr	:o
earliest       	 jjs => earli          	  jj	:o
easy           	  jj => easy           	  jj	:o
effect         	  nn => effect         	  nn	:o
effects        	 nns => effect         	  nn	:o
efficient      	  jj => efficient      	  jj	:o
element        	  nn => element        	  nn	:o
elementary     	  jj => elementary     	  jj	:o
elements       	 nns => element        	  nn	:o
elide          	  vb => elide          	  vb	:o
elided         	 vbn => elide          	  vb	:o
ellipsis       	  nn => ellipsis       	  nn	:o
else           	  rb => else           	  rb	:o
elsewhere      	  rb => elsewhere      	  rb	:o
embed          	  nn => embed          	  nn	:o
embedded       	  jj => embedded       	  jj	:o
embedding      	 vbg => embed          	  vb	:o
embeds         	 nns => embed          	  nn	:o
empty          	  jj => empty          	  jj	:o
empty          	  rb => empty          	  rb	:o
enable         	 vbp => enable         	  vb	:o
enables        	 vbz => enable         	  vb	:o
enclosed       	 vbn => enclose        	  vb	:o
enclosing      	 vbg => enclose        	  vb	:o
encode         	  nn => encode         	  nn	:o
encoded        	 vbn => encode         	  vb	:o
encoding       	  nn => encoding       	  nn	:o
encompasses    	 vbz => encompass      	  vb	:o
encounters     	 vbz => encounter      	  vb	:o
encouraged     	 vbn => encourage      	  vb	:o
end            	  nn => end            	  nn	:o
ends           	 vbz => end            	  vb	:o
enforces       	 vbz => enforce        	  vb	:o
enough         	  rb => enough         	  rb	:o
ensure         	  vb => ensure         	  vb	:o
ensures        	 vbz => ensure         	  vb	:o
entering       	 vbg => enter          	  vb	:o
entire         	  jj => entire         	  jj	:o
entirely       	  rb => entirely       	  rb	:o
entities       	 nns => entity         	  nn	:o
entity         	  nn => entity         	  nn	:o
entries        	 nns => entry          	  nn	:o
entry          	  nn => entry          	  nn	:o
enumerations   	 nns => enumeration    	  nn	:o
environments   	 nns => environment    	  nn	:o
equal          	  jj => equal          	  jj	:o
equal          	  vb => equal          	  vb	:o
equality       	  nn => equality       	  nn	:o
equals         	 vbz => equal          	  vb	:o
equivalent     	  jj => equivalent     	  jj	:o
erroneous      	  jj => erroneous      	  jj	:o
erroneously    	  rb => erroneously    	  rb	:o
error          	  nn => error          	  nn	:o
errors         	 nns => error          	  nn	:o
escape         	  nn => escape         	  nn	:o
escapes        	 nns => escape         	  nn	:o
evaluate       	 vbp => evaluate       	  vb	:o
evaluated      	 vbn => evaluate       	  vb	:o
evaluates      	 vbz => evaluate       	  vb	:o
evaluating     	 vbg => evaluate       	  vb	:o
evaluation     	  nn => evaluation     	  nn	:o
even           	  rb => even           	  rb	:o
events         	 nns => event          	  nn	:o
exact          	  jj => exact          	  jj	:o
exactly        	  rb => exactly        	  rb	:o
example        	  nn => example        	  nn	:o
examples       	 nns => example        	  nn	:o
except         	  vb => except         	  vb	:o
exception      	  nn => exception      	  nn	:o
exclude        	  vb => exclude        	  vb	:o
excludes       	 vbz => exclude        	  vb	:o
execute        	  vb => execute        	  vb	:o
executed       	 vbn => execute        	  vb	:o
executes       	 nns => execute        	  nn	:o
executes       	 vbz => execute        	  vb	:o
executing      	 vbg => execute        	  vb	:o
execution      	  nn => execution      	  nn	:o
exist          	  vb => exist          	  vb	:o
exist          	 vbp => exist          	  vb	:o
existing       	 vbg => exist          	  vb	:o
exists         	 vbz => exist          	  vb	:o
exits          	 vbz => exit           	  vb	:o
exp            	  nn => exp            	  nn	:o
explicit       	  jj => explicit       	  jj	:o
explicitly     	  rb => explicitly     	  rb	:o
exploits       	 vbz => exploit        	  vb	:o
exponent       	  nn => exponent       	  nn	:o
exported       	  jj => exported       	  jj	:o
exported       	 vbn => export         	  vb	:o
exports        	 nns => export         	  nn	:o
expressed      	 vbn => express        	  vb	:o
expression     	  nn => expression     	  nn	:o
expressions    	 nns => expression     	  nn	:o
extend         	  vb => extend         	  vb	:o
extended       	  jj => extended       	  jj	:o
extended       	 vbn => extend         	  vb	:o
extent         	  nn => extent         	  nn	:o
extra          	  jj => extra          	  jj	:o
extract        	  vb => extract        	  vb	:o
facilities     	 nns => facility       	  nn	:o
factor         	  nn => factor         	  nn	:o
fail           	  vb => fail           	  vb	:o
fails          	 vbz => fail           	  vb	:o
failure        	  nn => failure        	  nn	:o
fall           	 vbp => fall           	  vb	:o
false          	  jj => false          	  jj	:o
feed           	  nn => feed           	  nn	:o
fewer          	 jjr => fewer          	 jjr	:o
fields         	 nns => field          	  nn	:o
file           	  nn => file           	  nn	:o
files          	 nns => file           	  nn	:o
final          	  jj => final          	  jj	:o
finally        	  rb => finally        	  rb	:o
finding        	 vbg => find           	  vb	:o
finite         	  jj => finite         	  jj	:o
first-in-first-out	  jj => first-in-first-out	  jj	:o
fit            	  vb => fit            	  vb	:o
fits           	 vbz => fit            	  vb	:o
float32        	 vbp => float32        	  vb	:o
float64        	  jj => float64        	  jj	:o
float64        	  nn => float64        	  nn	:o
floatt         	  nn => floatt         	  nn	:o
floatt         	 vbz => floatt         	  vb	:o
floating       	 vbg => float          	  vb	:o
floating-point 	  jj => floating-point 	  jj	:o
floating-point 	  nn => floating-point 	  nn	:o
floats         	 nns => float          	  nn	:o
flow           	  vb => flow           	  vb	:o
flows          	 vbz => flow           	  vb	:o
followed       	 vbn => follow         	  vb	:o
following      	  nn => following      	  nn	:o
following      	 vbg => following      	  vb	:o
follows        	 vbz => follow         	  vb	:o
forever        	  rb => forever        	  rb	:o
form           	  nn => form           	  nn	:o
formal         	  jj => formal         	  jj	:o
formats        	 nns => format         	  nn	:o
formatting     	 vbg => format         	  vb	:o
formed         	 vbn => form           	  vb	:o
former         	  jj => former         	  jj	:o
forms          	 nns => form           	  nn	:o
forms          	 vbp => form           	  vb	:o
fraction       	  nn => fraction       	  nn	:o
fractional     	  jj => fractional     	  jj	:o
full           	  jj => full           	  jj	:o
fully          	  rb => fully          	  rb	:o
func           	  nn => func           	  nn	:o
function-local 	  jj => function-local 	  jj	:o
functionality  	  nn => functionality  	  nn	:o
functions      	 nns => function       	  nn	:o
functions—happens	 nns => functions—happen	  nn	:o
further        	  jj => further        	  jj	:o
fused          	  jj => fused          	  jj	:o
fused          	 vbn => fuse           	  vb	:o
fusion         	  nn => fusion         	  nn	:o
garbage-collected	  jj => garbage-collected	  jj	:o
general        	  jj => general        	  jj	:o
general-purpose	  jj => general-purpose	  jj	:o
generated      	 vbn => generate       	  vb	:o
generates      	 vbz => generate       	  vb	:o
generator      	  nn => generator      	  nn	:o
generic        	  jj => generic        	  jj	:o
generics       	 nns => generic        	  nn	:o
get            	 vbp => get            	  vb	:o
given          	 vbn => given          	  vb	:o
gives          	 vbz => give           	  vb	:o
goroutines     	 nns => goroutine      	  nn	:o
grammar        	  nn => grammar        	  nn	:o
greater        	 jjr => greater        	 jjr	:o
group          	  nn => group          	  nn	:o
grouping       	 vbg => grouping       	  vb	:o
grow           	  vb => grow           	  vb	:o
guaranteed     	 vbn => guarantee      	  vb	:o
guarantees     	 nns => guarantee      	  nn	:o
guard          	  nn => guard          	  nn	:o
halves         	 nns => half           	  nn	:o
hand           	  nn => hand           	  nn	:o
handling       	 vbg => handling       	  vb	:o
happen         	  vb => happen         	  vb	:o
happens        	 vbz => happen         	  vb	:o
have           	  vb => have           	  vb	:o
here           	  rb => here           	  rb	:o
hexadecimal    	  jj => hexadecimal    	  jj	:o
hexadecimal    	  nn => hexadecimal    	  nn	:o
hidden         	  jj => hidden         	  jj	:o
hierarchy      	  nn => hierarchy      	  nn	:o
high           	  jj => high           	  jj	:o
higher-dimensional	  jj => higher-dimensional	  jj	:o
highest        	 jjs => high           	  jj	:o
hint           	  nn => hint           	  nn	:o
hold           	  vb => hold           	  vb	:o
holder         	  nn => holder         	  nn	:o
holding        	 vbg => holding        	  vb	:o
holds          	 vbz => hold           	  vb	:o
horizontal     	  jj => horizontal     	  jj	:o
however        	  rb => however        	  rb	:o
hypothetical   	  jj => hypothetical   	  jj	:o
identical      	  jj => identical      	  jj	:o
identified     	 vbn => identify       	  vb	:o
identifier     	  nn => identifier     	  nn	:o
identifiers    	 nns => identifier     	  nn	:o
identify       	  vb => identify       	  vb	:o
identifying    	 vbg => identify       	  vb	:o
identity       	  nn => identity       	  nn	:o
idiomatic      	  jj => idiomatic      	  jj	:o
ignore         	  vb => ignore         	  vb	:o
ignored        	 vbn => ignore         	  vb	:o
ignoring       	 vbg => ignore         	  vb	:o
illegal        	  jj => illegal        	  jj	:o
illustrates    	 vbz => illustrate     	  vb	:o
imag           	  nn => imag           	  nn	:o
imaginary      	  jj => imaginary      	  jj	:o
imaginarypart  	  vb => imaginarypart  	  vb	:o
immaterial     	  jj => immaterial     	  jj	:o
immediately    	  rb => immediately    	  rb	:o
immutable      	  jj => immutable      	  jj	:o
implement      	  vb => implement      	  vb	:o
implementation 	  nn => implementation 	  nn	:o
implementation-defined	  jj => implementation-defined	  jj	:o
implementation-dependent	  jj => implementation-dependent	  jj	:o
implementation-specific	  jj => implementation-specific	  jj	:o
implementations	 nns => implementation 	  nn	:o
implemented    	 vbd => implement      	  vb	:o
implements     	 vbz => implement      	  vb	:o
implicit       	  jj => implicit       	  jj	:o
implicit       	  nn => implicit       	  nn	:o
implicitly     	  rb => implicitly     	  rb	:o
implied        	 vbn => imply          	  vb	:o
imported       	 vbn => import         	  vb	:o
importing      	  nn => importing      	  nn	:o
imports        	 nns => import         	  nn	:o
imports        	 vbz => import         	  vb	:o
impossible     	  jj => impossible     	  jj	:o
include        	  vb => include        	  vb	:o
included       	 vbn => include        	  vb	:o
includes       	 vbz => include        	  vb	:o
including      	 vbg => include        	  vb	:o
inclusive      	  jj => inclusive      	  jj	:o
incoming       	  nn => incoming       	  nn	:o
increasing     	 vbg => increase       	  vb	:o
increment      	  nn => increment      	  nn	:o
incur          	  vb => incur          	  vb	:o
independent    	  jj => independent    	  jj	:o
independently  	  rb => independently  	  rb	:o
indexed        	 vbn => index          	  vb	:o
indexing       	  nn => indexing       	  nn	:o
indicate       	  vb => indicate       	  vb	:o
indication     	  nn => indication     	  nn	:o
indices        	 nns => index          	  nn	:o
indirection    	  nn => indirection    	  nn	:o
indirections   	 nns => indirection    	  nn	:o
indirectly     	  rb => indirectly     	  rb	:o
indirects      	 vbz => indirects      	  vb	:o
indistinguishable	  jj => indistinguishable	  jj	:o
individual     	  jj => individual     	  jj	:o
individually   	  rb => individually   	  rb	:o
infer          	  vb => infer          	  vb	:o
inference      	  nn => inference      	  nn	:o
inferrable     	  jj => inferrable     	  jj	:o
inferred       	  jj => inferred       	  jj	:o
inferred       	 vbn => infer          	  vb	:o
infers         	 nns => infer          	  nn	:o
infinite       	  jj => infinite       	  jj	:o
infinity       	  nn => infinity       	  nn	:o
influence      	  nn => influence      	  nn	:o
informally     	  rb => informally     	  rb	:o
information    	  nn => information    	  nn	:o
inhabit        	  nn => inhabit        	  nn	:o
inherit        	  vb => inherit        	  vb	:o
init           	  nn => init           	  nn	:o
initial        	  jj => initial        	  jj	:o
initialization 	  nn => initialization 	  nn	:o
initialization—variable	  jj => initialization—variable	  jj	:o
initialize     	  vb => initialize     	  vb	:o
initialized    	 vbn => initialize     	  vb	:o
initializer    	  jj => initializer    	  jj	:o
initializers   	 nns => initializer    	  nn	:o
initializes    	 vbz => initialize     	  vb	:o
initializing   	 vbg => initialize     	  vb	:o
inner          	  jj => inner          	  jj	:o
innermost      	  nn => innermost      	  nn	:o
input          	  nn => input          	  nn	:o
inserted       	 vbn => insert         	  vb	:o
insertion      	  nn => insertion      	  nn	:o
installed      	 vbd => install        	  vb	:o
instance       	  nn => instance       	  nn	:o
instantiated   	 vbn => instantiate    	  vb	:o
instantiating  	 vbg => instantiate    	  vb	:o
instantiation  	  nn => instantiation  	  nn	:o
instead        	  rb => instead        	  rb	:o
instruction    	  nn => instruction    	  nn	:o
instructions   	 nns => instruction    	  nn	:o
int            	  nn => int            	  nn	:o
int16          	  jj => int16          	  jj	:o
int32          	  nn => int32          	  nn	:o
int64          	  jj => int64          	  jj	:o
int64          	  nn => int64          	  nn	:o
int8           	  jj => int8           	  jj	:o
integer        	  jj => integer        	  jj	:o
integer        	  nn => integer        	  nn	:o
integers       	 nns => integer        	  nn	:o
integral       	  jj => integral       	  jj	:o
integrated     	  jj => integrated     	  jj	:o
interface-valued	  jj => interface-valued	  jj	:o
interfaces     	 nns => interface      	  nn	:o
interface{}    	  nn => interface{}    	  nn	:o
intermediate   	  jj => intermediate   	  jj	:o
internal       	  jj => internal       	  jj	:o
interpretation 	  nn => interpretation 	  nn	:o
interpreted    	 vbn => interpret      	  vb	:o
interrupts     	 vbz => interrupt      	  vb	:o
intersection   	  nn => intersection   	  nn	:o
introduce      	  vb => introduce      	  vb	:o
introduced     	 vbn => introduce      	  vb	:o
introducing    	 vbg => introduce      	  vb	:o
invalid        	  jj => invalid        	  jj	:o
inverse        	  nn => inverse        	  nn	:o
invocation     	  nn => invocation     	  nn	:o
invocations    	 nns => invocation     	  nn	:o
invoke         	  vb => invoke         	  vb	:o
invoked        	 vbn => invoke         	  vb	:o
invokes        	 vbz => invoke         	  vb	:o
invoking       	 vbg => invoke         	  vb	:o
involves       	 vbz => involve        	  vb	:o
involving      	 vbg => involve        	  vb	:o
iota           	  nn => iota           	  nn	:o
irrelevant     	  jj => irrelevant     	  jj	:o
irrespective   	  nn => irrespective   	  nn	:o
issues         	 nns => issue          	  nn	:o
item           	  nn => item           	  nn	:o
items          	 nns => item           	  nn	:o
iterates       	 vbz => iterate        	  vb	:o
iteration      	  nn => iteration      	  nn	:o
iterations     	 nns => iteration      	  nn	:o
jump           	  nn => jump           	  nn	:o
just           	  rb => just           	  rb	:o
key            	  nn => key            	  nn	:o
keys           	 nns => key            	  nn	:o
keywords       	 nns => keyword        	  nn	:o
kind           	  nn => kind           	  nn	:o
kinds          	 nns => kind           	  nn	:o
know           	 vbp => know           	  vb	:o
known          	 vbn => known          	  vb	:o
label          	  nn => label          	  nn	:o
labeled        	  jj => labeled        	  jj	:o
labeled        	 vbn => label          	  vb	:o
labeling       	 vbg => label          	  vb	:o
labels         	 nns => label          	  nn	:o
language       	  nn => language       	  nn	:o
large          	  jj => large          	  jj	:o
larger         	 jjr => larger         	 jjr	:o
largest        	 jjs => larg           	  jj	:o
last           	  jj => last           	  jj	:o
later          	  rb => later          	  rb	:o
latter         	  nn => latter         	  nn	:o
launch         	  vb => launch         	  vb	:o
leading        	 vbg => lead           	  vb	:o
least          	 jjs => least          	 jjs	:o
leaving        	 vbg => leave          	  vb	:o
left           	  nn => left           	  nn	:o
left           	  vb => left           	  vb	:o
left           	 vbd => left           	  vb	:o
left-          	  jj => left-          	  jj	:o
left-hand      	  jj => left-hand      	  jj	:o
left-to-right  	  jj => left-to-right  	  jj	:o
leftmost       	  nn => leftmost       	  nn	:o
legal          	  jj => legal          	  jj	:o
legally        	  rb => legally        	  rb	:o
len            	 nnp => len            	 nnp	:o
length         	  nn => length         	  nn	:o
lengths        	 nns => length         	  nn	:o
less           	 jjr => less           	 jjr	:o
letter         	  nn => letter         	  nn	:o
letters        	 nns => letter         	  nn	:o
level          	  nn => level          	  nn	:o
levels         	 nns => level          	  nn	:o
lexical        	  jj => lexical        	  jj	:o
lexically      	  rb => lexically      	  rb	:o
lib/math       	  nn => lib/math       	  nn	:o
light-weight   	  jj => light-weight   	  jj	:o
limit          	  nn => limit          	  nn	:o
limited        	  jj => limited        	  jj	:o
limits         	 nns => limit          	  nn	:o
line           	  nn => line           	  nn	:o
linguistic     	  jj => linguistic     	  jj	:o
linking        	 vbg => link           	  vb	:o
list           	  nn => list           	  nn	:o
listed         	 vbn => list           	  vb	:o
listing        	 vbg => listing        	  vb	:o
lists          	 nns => list           	  nn	:o
literally      	  rb => literally      	  rb	:o
literals       	 nns => literal        	  nn	:o
local          	  jj => local          	  jj	:o
location       	  nn => location       	  nn	:o
logical        	  jj => logical        	  jj	:o
long           	  rb => long           	  rb	:o
longest        	 jjs => long           	  jj	:o
looks          	 vbz => look           	  vb	:o
loop           	  nn => loop           	  nn	:o
lose           	  vb => lose           	  vb	:o
low            	  jj => low            	  jj	:o
low-level      	  jj => low-level      	  jj	:o
lower          	 jjr => lower          	 jjr	:o
lower-case     	  jj => lower-case     	  jj	:o
m.sin          	  nn => m.sin          	  nn	:o
made           	 vbn => make           	  vb	:o
main           	  jj => main           	  jj	:o
make           	 vbp => make           	  vb	:o
makes          	 vbz => make           	  vb	:o
manage         	  vb => manage         	  vb	:o
management     	  nn => management     	  nn	:o
mantissa       	  nn => mantissa       	  nn	:o
manual         	  nn => manual         	  nn	:o
manually       	  rb => manually       	  rb	:o
maps           	 nns => map            	  nn	:o
mark           	  nn => mark           	  nn	:o
marked         	 vbn => mark           	  vb	:o
markers        	 nns => marker         	  nn	:o
marking        	 vbg => marking        	  vb	:o
mask           	  nn => mask           	  nn	:o
match          	  vb => match          	  vb	:o
match          	 vbp => match          	  vb	:o
matches        	 nns => match          	  nn	:o
matching       	  nn => matching       	  nn	:o
math.sin       	  nn => math.sin       	  nn	:o
matter         	  vb => matter         	  vb	:o
maximum        	  jj => maximum        	  jj	:o
meaning        	  nn => meaning        	  nn	:o
means          	 vbz => mean           	  vb	:o
measure        	  nn => measure        	  nn	:o
mechanism      	  nn => mechanism      	  nn	:o
member         	  nn => member         	  nn	:o
memory         	  nn => memory         	  nn	:o
meta-)type     	  jj => meta-)type     	  jj	:o
methods        	 nns => method         	  nn	:o
mind           	  nn => mind           	  nn	:o
minimal        	  jj => minimal        	  jj	:o
minimum        	  nn => minimum        	  nn	:o
missing        	  jj => missing        	  jj	:o
mixed          	 vbn => mix            	  vb	:o
modify         	  vb => modify         	  vb	:o
modulo         	  jj => modulo         	  jj	:o
moment         	  nn => moment         	  nn	:o
more           	 jjr => more           	 jjr	:o
most           	 jjs => most           	 jjs	:o
multi-byte     	  nn => multi-byte     	  nn	:o
multi-character	  jj => multi-character	  jj	:o
multi-dimensional	  jj => multi-dimensional	  jj	:o
multi-valued   	  jj => multi-valued   	  jj	:o
multi-variable 	  jj => multi-variable 	  jj	:o
multi-way      	  jj => multi-way      	  jj	:o
multiple       	  nn => multiple       	  nn	:o
multiplied     	 vbn => multiply       	  vb	:o
multiply       	  nn => multiply       	  nn	:o
n't            	  rb => n't            	  rb	:o
n-bit          	  jj => n-bit          	  jj	:o
n]e            	  nn => n]e            	  nn	:o
n]t            	  nn => n]t            	  nn	:o
named          	 vbn => name           	  vb	:o
names          	 nns => name           	  nn	:o
names          	 vbz => name           	  vb	:o
nearest        	 jjs => near           	  jj	:o
necessary      	  jj => necessary      	  jj	:o
negation       	  nn => negation       	  nn	:o
negative       	  jj => negative       	  jj	:o
nest           	 jjs => n              	  jj	:o
nested         	  jj => nested         	  jj	:o
never          	  rb => never          	  rb	:o
new            	  jj => new            	  jj	:o
newline        	  nn => newline        	  nn	:o
newlines       	 nns => newline        	  nn	:o
next           	  jj => next           	  jj	:o
nil            	  jj => nil            	  jj	:o
nn             	  jj => nn             	  jj	:o
nnn            	  jj => nnn            	  jj	:o
no-op          	  jj => no-op          	  jj	:o
non-           	  jj => non-           	  jj	:o
non-blank      	  jj => non-blank      	  jj	:o
non-complex    	  jj => non-complex    	  jj	:o
non-composite  	  jj => non-composite  	  jj	:o
non-constant   	  jj => non-constant   	  jj	:o
non-constants  	 nns => non-constant   	  nn	:o
non-decimal    	  jj => non-decimal    	  jj	:o
non-empty      	  jj => non-empty      	  jj	:o
non-exported   	  jj => non-exported   	  jj	:o
non-generic    	  jj => non-generic    	  jj	:o
non-interface  	  jj => non-interface  	  jj	:o
non-interface  	  nn => non-interface  	  nn	:o
non-negative   	  jj => non-negative   	  jj	:o
non-type       	  jj => non-type       	  jj	:o
non-variadic   	  jj => non-variadic   	  jj	:o
normal         	  jj => normal         	  jj	:o
normally       	  rb => normally       	  rb	:o
not-a-number   	  jj => not-a-number   	  jj	:o
notation       	  nn => notation       	  nn	:o
nothing        	  nn => nothing        	  nn	:o
nth            	  jj => nth            	  jj	:o
number         	  nn => number         	  nn	:o
numbered       	  jj => numbered       	  jj	:o
numbers        	 nns => number         	  nn	:o
numeric        	  jj => numeric        	  jj	:o
objects        	 nns => object         	  nn	:o
obtained       	 vbn => obtain         	  vb	:o
occupy         	  vb => occupy         	  vb	:o
occur          	  vb => occur          	  vb	:o
occurs         	  nn => occurs         	  nn	:o
occurs         	 nns => occur          	  nn	:o
octal          	  jj => octal          	  jj	:o
octal          	  nn => octal          	  nn	:o
offset         	  nn => offset         	  nn	:o
omit           	  vb => omit           	  vb	:o
omitted        	 vbn => omit           	  vb	:o
once           	  rb => once           	  rb	:o
one-dimensional	  jj => one-dimensional	  jj	:o
op             	  jj => op             	  jj	:o
opening        	  nn => opening        	  nn	:o
operand        	  nn => operand        	  nn	:o
operands       	 nns => operand        	  nn	:o
operates       	 vbz => operate        	  vb	:o
operation      	  nn => operation      	  nn	:o
operations     	 nns => operation      	  nn	:o
operator       	  nn => operator       	  nn	:o
operators      	 nns => operator       	  nn	:o
opposed        	 vbn => oppose         	  vb	:o
optimize       	  vb => optimize       	  vb	:o
option         	  nn => option         	  nn	:o
optional       	  jj => optional       	  jj	:o
optionally     	  rb => optionally     	  rb	:o
order          	  nn => order          	  nn	:o
ordered        	 vbd => order          	  vb	:o
ordered        	 vbn => order          	  vb	:o
ordering       	  nn => ordering       	  nn	:o
ordinary       	  jj => ordinary       	  jj	:o
organization   	  nn => organization   	  nn	:o
original       	  jj => original       	  jj	:o
originally     	  rb => originally     	  rb	:o
other          	  jj => other          	  jj	:o
otherwise      	  rb => otherwise      	  rb	:o
overflow       	  nn => overflow       	  nn	:o
overlaps       	 vbp => overlap        	  vb	:o
overriding     	 vbg => override       	  vb	:o
overwrite      	  vb => overwrite      	  vb	:o
own            	  jj => own            	  jj	:o
package-level  	  nn => package-level  	  nn	:o
packages       	 nns => package        	  nn	:o
pair           	  nn => pair           	  nn	:o
pairs          	  nn => pairs          	  nn	:o
pairs          	 nns => pair           	  nn	:o
pairwise       	  nn => pairwise       	  nn	:o
panicking      	  nn => panicking      	  nn	:o
panicking      	 vbg => panic          	  vb	:o
panics         	 nns => panic          	  nn	:o
parameter      	  nn => parameter      	  nn	:o
parameters     	 nns => parameter      	  nn	:o
parentheses    	 nns => parenthesis    	  nn	:o
parentheses    	 vbz => parenthesis    	  vb	:o
parenthesized  	 vbn => parenthesize   	  vb	:o
parse          	  vb => parse          	  vb	:o
parsed         	 vbn => parse          	  vb	:o
parsing        	  jj => parsing        	  jj	:o
part           	  nn => part           	  nn	:o
partial        	  jj => partial        	  jj	:o
partial        	  nn => partial        	  nn	:o
partially      	  rb => partially      	  rb	:o
particular     	  jj => particular     	  jj	:o
parts          	 nns => part           	  nn	:o
pass           	  vb => pass           	  vb	:o
passed         	 vbd => pass           	  vb	:o
passing        	  nn => passing        	  nn	:o
path           	  nn => path           	  nn	:o
performed      	 vbn => perform        	  vb	:o
period         	  nn => period         	  nn	:o
permissible    	  jj => permissible    	  jj	:o
permit         	  vb => permit         	  vb	:o
permits        	 vbz => permit         	  vb	:o
permitted      	 vbn => permit         	  vb	:o
permitting     	 vbg => permit         	  vb	:o
phase          	  nn => phase          	  nn	:o
phases         	 nns => phase          	  nn	:o
place          	  nn => place          	  nn	:o
placed         	 vbn => place          	  vb	:o
placeholder    	  nn => placeholder    	  nn	:o
plain          	  nn => plain          	  nn	:o
point          	  nn => point          	  nn	:o
pointed        	 vbn => point          	  vb	:o
pointer-receiver	  jj => pointer-receiver	  jj	:o
pointers       	 nns => pointer        	  nn	:o
pointing       	 vbg => point          	  vb	:o
points         	 nns => point          	  nn	:o
portability    	  nn => portability    	  nn	:o
portable       	  jj => portable       	  jj	:o
position       	  nn => position       	  nn	:o
possible       	  jj => possible       	  jj	:o
possibly       	  rb => possibly       	  rb	:o
post           	  nn => post           	  nn	:o
power          	  nn => power          	  nn	:o
pre-go1.18     	  nn => pre-go1.18     	  nn	:o
preceded       	 vbn => precede        	  vb	:o
precedence     	  nn => precedence     	  nn	:o
preceding      	 vbg => precede        	  vb	:o
precise        	  jj => precise        	  jj	:o
precisely      	  rb => precisely      	  rb	:o
precision      	  nn => precision      	  nn	:o
predeclared    	  jj => predeclared    	  jj	:o
predeclared    	 vbn => predeclared    	  vb	:o
predeclares    	 vbz => predeclares    	  vb	:o
prefix         	  nn => prefix         	  nn	:o
prefixed       	 vbn => prefix         	  vb	:o
present        	  jj => present        	  jj	:o
present        	  vb => present        	  vb	:o
presented      	 vbn => present        	  vb	:o
preventing     	 vbg => prevent        	  vb	:o
previous       	  jj => previous       	  jj	:o
previously     	  rb => previously     	  rb	:o
primary        	  jj => primary        	  jj	:o
prime          	  jj => prime          	  jj	:o
print          	  nn => print          	  nn	:o
printing       	  nn => printing       	  nn	:o
println        	 nns => println        	 nns	:o
prints         	 nns => print          	  nn	:o
proceed        	  vb => proceed        	  vb	:o
proceeds       	 nns => proceed        	  nn	:o
process        	  nn => process        	  nn	:o
processed      	 vbn => process        	  vb	:o
processing     	 vbg => process        	  vb	:o
produce        	  vb => produce        	  vb	:o
produced       	 vbn => produce        	  vb	:o
produces       	 vbz => produce        	  vb	:o
product        	  nn => product        	  nn	:o
production     	  nn => production     	  nn	:o
production_name	  nn => production_name	  nn	:o
productions    	 nns => production     	  nn	:o
program        	  nn => program        	  nn	:o
program-defined	  jj => program-defined	  jj	:o
programming    	  nn => programming    	  nn	:o
programs       	 nns => program        	  nn	:o
promoted       	 vbn => promote        	  vb	:o
properties     	 nns => property       	  nn	:o
prose          	  nn => prose          	  nn	:o
protects       	 vbz => protect        	  vb	:o
provide        	 vbp => provide        	  vb	:o
provided       	 vbn => provide        	  vb	:o
provides       	 vbz => provide        	  vb	:o
pseudo-random  	  jj => pseudo-random  	  jj	:o
punctuation    	  nn => punctuation    	  nn	:o
purpose        	  nn => purpose        	  nn	:o
qualified      	  jj => qualified      	  jj	:o
qualified      	 vbn => qualify        	  vb	:o
qualifier      	  nn => qualifier      	  nn	:o
queued         	 vbn => queue          	  vb	:o
queues         	 nns => queue          	  nn	:o
quite          	  rb => quite          	  rb	:o
quote          	  nn => quote          	  nn	:o
quoted         	 vbn => quote          	  vb	:o
quotes         	 nns => quote          	  nn	:o
quotient       	  nn => quotient       	  nn	:o
radix          	  nn => radix          	  nn	:o
raised         	 vbn => raise          	  vb	:o
range          	  nn => range          	  nn	:o
ranges         	 nns => range          	  nn	:o
rare           	  jj => rare           	  jj	:o
rather         	  rb => rather         	  rb	:o
raw            	  jj => raw            	  jj	:o
re-used        	  jj => re-used        	  jj	:o
re-uses        	 vbz => re-use         	  vb	:o
reach          	  vb => reach          	  vb	:o
reachable      	  jj => reachable      	  jj	:o
reached        	 vbd => reach          	  vb	:o
reaches        	 nns => reach          	  nn	:o
read           	  vb => read           	  vb	:o
readability    	  nn => readability    	  nn	:o
ready          	  jj => ready          	  jj	:o
ready          	 vbp => ready          	  vb	:o
real           	  jj => real           	  jj	:o
receive        	  nn => receive        	  nn	:o
receive        	 vbp => receive        	  vb	:o
receive-only   	  jj => receive-only   	  jj	:o
received       	  jj => received       	  jj	:o
received       	 vbn => receive        	  vb	:o
receivers      	 nns => receiver       	  nn	:o
receives       	 nns => receife        	  nn	:o
receiving      	 vbg => receive        	  vb	:o
recent         	  jj => recent         	  jj	:o
records        	 nns => record         	  nn	:o
recover        	  nn => recover        	  nn	:o
recursively    	  rb => recursively    	  rb	:o
redeclaration  	  nn => redeclaration  	  nn	:o
redeclare      	  vb => redeclare      	  vb	:o
redeclared     	 vbn => redeclared     	  vb	:o
refer          	  vb => refer          	  vb	:o
reference      	  nn => reference      	  nn	:o
referenced     	 vbn => reference      	  vb	:o
references     	 vbz => reference      	  vb	:o
referred       	 vbn => refer          	  vb	:o
referring      	 vbg => refer          	  vb	:o
refers         	 nns => refer          	  nn	:o
reflect        	  vb => reflect        	  vb	:o
reflection     	  nn => reflection     	  nn	:o
regardless     	  rb => regardless     	  rb	:o
regular        	  jj => regular        	  jj	:o
related        	  jj => related        	  jj	:o
relation       	  nn => relation       	  nn	:o
relationship   	  nn => relationship   	  nn	:o
relationships  	 nns => relationship   	  nn	:o
relative       	 vbp => relative       	  vb	:o
release        	  nn => release        	  nn	:o
relevant       	  jj => relevant       	  jj	:o
rely           	  vb => rely           	  vb	:o
remain         	 vbp => remain         	  vb	:o
remainder      	  nn => remainder      	  nn	:o
remaining      	 vbg => remain         	  vb	:o
remains        	 vbz => remain         	  vb	:o
remove         	  jj => remove         	  jj	:o
removed        	 vbn => remove         	  vb	:o
removes        	 vbz => remove         	  vb	:o
repeated       	  jj => repeated       	  jj	:o
repeatedly     	  rb => repeatedly     	  rb	:o
repeating      	 vbg => repeat         	  vb	:o
repetition     	  nn => repetition     	  nn	:o
replaced       	 vbn => replace        	  vb	:o
replacement    	  nn => replacement    	  nn	:o
reported       	 vbn => report         	  vb	:o
reporting      	  nn => reporting      	  nn	:o
reports        	 vbz => report         	  vb	:o
repository     	  nn => repository     	  nn	:o
represent      	 vbp => represent      	  vb	:o
representable  	  jj => representable  	  jj	:o
representation 	  nn => representation 	  nn	:o
representations	 nns => representation 	  nn	:o
representative 	  jj => representative 	  jj	:o
represented    	 vbn => represent      	  vb	:o
representing   	 vbg => represent      	  vb	:o
represents     	 vbz => represent      	  vb	:o
reproducible   	  jj => reproducible   	  jj	:o
require        	  vb => require        	  vb	:o
required       	 vbn => require        	  vb	:o
requirement    	  nn => requirement    	  nn	:o
requirements   	 nns => requirement    	  nn	:o
reserved       	 vbn => reserve        	  vb	:o
reserves       	 nns => reserf         	  nn	:o
resolve        	  vb => resolve        	  vb	:o
respective     	  jj => respective     	  jj	:o
respectively   	  rb => respectively   	  rb	:o
restrict       	  vb => restrict       	  vb	:o
restricted     	 vbn => restrict       	  vb	:o
restriction    	  nn => restriction    	  nn	:o
restrictions   	 nns => restriction    	  nn	:o
result         	  nn => result         	  nn	:o
resulting      	 vbg => result         	  vb	:o
results        	 nns => result         	  nn	:o
resumes        	 nns => resume         	  nn	:o
retrieved      	 vbn => retrieve       	  vb	:o
returned       	 vbn => return         	  vb	:o
returning      	 vbg => return         	  vb	:o
returns        	 nns => return         	  nn	:o
reverse        	  nn => reverse        	  nn	:o
reviewers      	 nns => reviewer       	  nn	:o
rewritten      	 vbn => rewrite        	  vb	:o
right          	  jj => right          	  jj	:o
right          	  nn => right          	  nn	:o
right          	  vb => right          	  vb	:o
right-hand     	  jj => right-hand     	  jj	:o
right-hand-side	  jj => right-hand-side	  jj	:o
room           	  nn => room           	  nn	:o
round          	  nn => round          	  nn	:o
round-to-even  	  jj => round-to-even  	  jj	:o
rounded        	 vbn => round          	  vb	:o
rounding       	  nn => rounding       	  nn	:o
rounding       	 vbg => round          	  vb	:o
rounds         	 vbz => round          	  vb	:o
rule           	  nn => rule           	  nn	:o
rules          	 nns => rule           	  nn	:o
run            	  jj => run            	  jj	:o
run            	 vbn => run            	  vb	:o
run-time       	  jj => run-time       	  jj	:o
rune           	  nn => rune           	  nn	:o
rune           	 nns => rune           	 nns	:o
runes          	 nns => rune           	  nn	:o
running        	  nn => running        	  nn	:o
safety         	  nn => safety         	  nn	:o
said           	 vbd => say            	  vb	:o
satisfied      	  jj => satisfied      	  jj	:o
satisfies      	 vbz => satisfy        	  vb	:o
satisfy        	 vbp => satisfy        	  vb	:o
saved          	 vbd => save           	  vb	:o
scales         	 vbz => scale          	  vb	:o
scoped         	 nns => scoped         	 nns	:o
scopes         	 vbz => scope          	  vb	:o
scoping        	  nn => scoping        	  nn	:o
second         	  jj => second         	  jj	:o
section        	  nn => section        	  nn	:o
see            	  vb => see            	  vb	:o
see            	 vbp => see            	  vb	:o
segment        	  nn => segment        	  nn	:o
select         	  jj => select         	  jj	:o
select         	  nn => select         	  nn	:o
selected       	 vbn => select         	  vb	:o
selecting      	 vbg => select         	  vb	:o
selection      	  nn => selection      	  nn	:o
selector       	  nn => selector       	  nn	:o
selectors      	 nns => selector       	  nn	:o
semantically   	  rb => semantically   	  rb	:o
semicolon      	  nn => semicolon      	  nn	:o
semicolons     	 nns => semicolon      	  nn	:o
send           	  vb => send           	  vb	:o
sender         	  nn => sender         	  nn	:o
sending        	 vbg => send           	  vb	:o
sends          	 nns => send           	  nn	:o
sends          	 vbz => send           	  vb	:o
sent           	  nn => sent           	  nn	:o
sent           	 vbn => send           	  vb	:o
separate       	  jj => separate       	  jj	:o
separates      	 vbz => separate       	  vb	:o
sequence       	  nn => sequence       	  nn	:o
sequences      	 vbz => sequence       	  vb	:o
sequential     	  jj => sequential     	  jj	:o
sequentially   	  rb => sequentially   	  rb	:o
series         	  nn => series         	  nn	:o
serve          	 vbp => serve          	  vb	:o
serves         	 vbz => serve          	  vb	:o
set            	  nn => set            	  nn	:o
set            	 vbn => set            	  vb	:o
sets           	 nns => set            	  nn	:o
sets           	 vbz => set            	  vb	:o
setting        	 vbg => set            	  vb	:o
several        	  jj => several        	  jj	:o
shallowest     	  nn => shallowest     	  nn	:o
share          	  nn => share          	  nn	:o
shared         	 vbn => share          	  vb	:o
shares         	 nns => share          	  nn	:o
sharing        	 vbg => share          	  vb	:o
shifted        	 vbn => shift          	  vb	:o
shifts         	 nns => shift          	  nn	:o
short          	  jj => short          	  jj	:o
shorthand      	  nn => shorthand      	  nn	:o
show           	 vbp => show           	  vb	:o
side           	  nn => side           	  nn	:o
side-effects   	 nns => side-effect    	  nn	:o
sieve          	  nn => sieve          	  nn	:o
sign           	  jj => sign           	  jj	:o
signature      	  nn => signature      	  nn	:o
signatures     	 nns => signature      	  nn	:o
signed         	 vbn => sign           	  vb	:o
significantly  	  rb => significantly  	  rb	:o
similar        	  jj => similar        	  jj	:o
simple         	  nn => simple         	  nn	:o
simplest       	 jjs => simpl          	  jj	:o
simplicity     	  nn => simplicity     	  nn	:o
simplified     	 vbd => simplify       	  vb	:o
single         	  jj => single         	  jj	:o
single-character	  jj => single-character	  jj	:o
single-valued  	  jj => single-valued  	  jj	:o
site           	  nn => site           	  nn	:o
size           	  nn => size           	  nn	:o
sizes          	 nns => size           	  nn	:o
skipped        	 vbn => skip           	  vb	:o
skips          	 pdt => skips          	 pdt	:o
sliced         	  jj => sliced         	  jj	:o
slices         	 nns => slice          	  nn	:o
slicing        	 vbg => slice          	  vb	:o
slightly       	  rb => slightly       	  rb	:o
snippets       	 nns => snippet        	  nn	:o
so             	  rb => so             	  rb	:o
solely         	  rb => solely         	  rb	:o
sometimes      	  rb => sometimes      	  rb	:o
soon           	  rb => soon           	  rb	:o
source         	  nn => source         	  nn	:o
space          	  nn => space          	  nn	:o
spaces         	 nns => space          	  nn	:o
speaking       	 vbg => speak          	  vb	:o
spec           	  nn => spec           	  nn	:o
special        	  jj => special        	  jj	:o
specially      	  rb => specially      	  rb	:o
specific       	  jj => specific       	  jj	:o
specification  	  nn => specification  	  nn	:o
specifications 	 nns => specification  	  nn	:o
specified      	 vbn => specify        	  vb	:o
specifies      	 vbz => specify        	  vb	:o
specify        	  vb => specify        	  vb	:o
specifying     	 vbg => specify        	  vb	:o
spelled        	 vbn => spell          	  vb	:o
square         	  jj => square         	  jj	:o
src            	  rb => src            	  rb	:o
standard       	  nn => standard       	  nn	:o
standard       	 vbn => standard       	  vb	:o
stands         	 vbz => stand          	  vb	:o
start          	  vb => start          	  vb	:o
starting       	 vbg => start          	  vb	:o
starts         	 vbz => start          	  vb	:o
state          	  nn => state          	  nn	:o
statement      	  nn => statement      	  nn	:o
statements     	 nns => statement      	  nn	:o
states         	 vbz => state          	  vb	:o
static         	  jj => static         	  jj	:o
stay           	  vb => stay           	  vb	:o
step           	  nn => step           	  nn	:o
steps          	 nns => step           	  nn	:o
stepwise       	  nn => stepwise       	  nn	:o
still          	  rb => still          	  rb	:o
stop           	  vb => stop           	  vb	:o
stops          	 nns => stop           	  nn	:o
stops          	 vbz => stop           	  vb	:o
storage        	  nn => storage        	  nn	:o
store          	  vb => store          	  vb	:o
stored         	 vbn => store          	  vb	:o
stream         	  nn => stream         	  nn	:o
strings        	 nns => string         	  nn	:o
strongest      	 jjs => strong         	  jj	:o
strongly       	  rb => strongly       	  rb	:o
struct         	  nn => struct         	  nn	:o
structs        	 nns => struct         	  nn	:o
structurally   	  rb => structurally   	  rb	:o
structure      	  nn => structure      	  nn	:o
structured     	  jj => structured     	  jj	:o
subexpressions 	 nns => subexpression  	  nn	:o
subsequent     	  jj => subsequent     	  jj	:o
subset         	  nn => subset         	  nn	:o
substitute     	 vbp => substitute     	  vb	:o
substituted    	 vbn => substitute     	  vb	:o
substituting   	 vbg => substitute     	  vb	:o
substitution   	  nn => substitution   	  nn	:o
substring      	  nn => substring      	  nn	:o
subtype        	  nn => subtype        	  nn	:o
succeed        	  vb => succeed        	  vb	:o
succeeded      	 vbd => succeed        	  vb	:o
succeeds       	 vbz => succeed        	  vb	:o
successful     	  jj => successful     	  jj	:o
successive     	  jj => successive     	  jj	:o
such           	  jj => such           	  jj	:o
sufficient     	  jj => sufficient     	  jj	:o
sufficiently   	  rb => sufficiently   	  rb	:o
sum            	  jj => sum            	  jj	:o
support        	  vb => support        	  vb	:o
supported      	 vbn => support        	  vb	:o
supports       	 vbz => support        	  vb	:o
surrogate      	  jj => surrogate      	  jj	:o
surrounding    	 vbg => surrounding    	  vb	:o
survive        	 vbp => survive        	  vb	:o
switches       	 nns => switch         	  nn	:o
switches       	 vbz => switch         	  vb	:o
synchronization	  nn => synchronization	  nn	:o
syntax         	  nn => syntax         	  nn	:o
system         	  nn => system         	  nn	:o
systems        	 nns => system         	  nn	:o
tab            	  nn => tab            	  nn	:o
table          	  nn => table          	  nn	:o
tabs           	  nn => tabs           	  nn	:o
tag            	  nn => tag            	  nn	:o
tags           	 nns => tag            	  nn	:o
take           	  vb => take           	  vb	:o
takes          	 vbz => take           	  vb	:o
taking         	 vbg => taking         	  vb	:o
target         	  nn => target         	  nn	:o
temporary      	  jj => temporary      	  jj	:o
term           	  nn => term           	  nn	:o
terminated     	 vbn => terminate      	  vb	:o
terminates     	 nns => terminate      	  nn	:o
terminates     	 vbz => terminate      	  vb	:o
terminating    	  nn => terminating    	  nn	:o
terminating    	 vbg => terminate      	  vb	:o
termination    	  nn => termination    	  nn	:o
terminators    	 nns => terminator     	  nn	:o
terms          	 nns => term           	  nn	:o
tested         	 vbn => test           	  vb	:o
text           	  nn => text           	  nn	:o
textual        	  jj => textual        	  jj	:o
that           	  rb => that           	  rb	:o
then           	  rb => then           	  rb	:o
there          	  ex => there          	  ex	:o
therefore      	  rb => therefore      	  rb	:o
thread         	  nn => thread         	  nn	:o
three-digit    	  jj => three-digit    	  jj	:o
thus           	  rb => thus           	  rb	:o
time           	  nn => time           	  nn	:o
times          	 nns => time           	  nn	:o
together       	  rb => together       	  rb	:o
token          	  nn => token          	  nn	:o
tokens         	 nns => token          	  nn	:o
too            	  rb => too            	  rb	:o
tools          	 nns => tool           	  nn	:o
top            	  jj => top            	  jj	:o
top-level      	  jj => top-level      	  jj	:o
top-to-bottom  	  jj => top-to-bottom  	  jj	:o
tracks         	 vbz => track          	  vb	:o
trailing       	  nn => trailing       	  nn	:o
transfers      	 nns => transfer       	  nn	:o
transitively   	  rb => transitively   	  rb	:o
traversed      	 vbd => traverse       	  vb	:o
treated        	 vbn => treat          	  vb	:o
trigger        	 vbp => trigger        	  vb	:o
triggers       	 nns => trigger        	  nn	:o
true           	  jj => true           	  jj	:o
truncated      	 vbn => truncate       	  vb	:o
truncation     	  nn => truncation     	  nn	:o
truth          	  nn => truth          	  nn	:o
tuple          	  jj => tuple          	  jj	:o
turn           	  nn => turn           	  nn	:o
turns          	 vbz => turn           	  vb	:o
twice          	  rb => twice          	  rb	:o
two-digit      	  jj => two-digit      	  jj	:o
type-specific  	  jj => type-specific  	  jj	:o
typed          	  jj => typed          	  jj	:o
typed          	 vbn => type           	  vb	:o
types          	 nns => type           	  nn	:o
types—array    	  nn => types—array    	  nn	:o
types—may      	  rb => types—may      	  rb	:o
typically      	  rb => typically      	  rb	:o
uint           	  jj => uint           	  jj	:o
uint16         	  jj => uint16         	  jj	:o
uint16         	  nn => uint16         	  nn	:o
uint32         	  jj => uint32         	  jj	:o
uint32         	  nn => uint32         	  nn	:o
uint64         	  jj => uint64         	  jj	:o
uint8          	  jj => uint8          	  jj	:o
uintptr        	 vbp => uintptr        	  vb	:o
unable         	  jj => unable         	  jj	:o
unary          	  jj => unary          	  jj	:o
unbuffered     	  jj => unbuffered     	  jj	:o
unchanged      	  jj => unchanged      	  jj	:o
underlying     	  jj => underlying     	  jj	:o
underscore     	  jj => underscore     	  jj	:o
underscores    	 nns => underscore     	  nn	:o
unescaped      	  jj => unescaped      	  jj	:o
unification    	  nn => unification    	  nn	:o
unified        	 vbn => unify          	  vb	:o
uniform        	  jj => uniform        	  jj	:o
unify          	  vb => unify          	  vb	:o
unifying       	  jj => unifying       	  jj	:o
unimported     	  jj => unimported     	  jj	:o
uninitialized  	  jj => uninitialized  	  jj	:o
uninterpreted  	  jj => uninterpreted  	  jj	:o
union          	  nn => union          	  nn	:o
unions         	 nns => union          	  nn	:o
unique         	  jj => unique         	  jj	:o
unit           	  nn => unit           	  nn	:o
universe       	  jj => universe       	  jj	:o
unknown        	  jj => unknown        	  jj	:o
unlikely       	  jj => unlikely       	  jj	:o
unnamed        	  jj => unnamed        	  jj	:o
unordered      	  jj => unordered      	  jj	:o
unparenthesized	  jj => unparenthesized	  jj	:o
unqualified    	  jj => unqualified    	  jj	:o
unresolved     	  jj => unresolved     	  jj	:o
unsafe         	  jj => unsafe         	  jj	:o
unsigned       	  jj => unsigned       	  jj	:o
unspecified    	  jj => unspecified    	  jj	:o
untyped        	  jj => untyped        	  jj	:o
updated        	  jj => updated        	  jj	:o
upper          	  jj => upper          	  jj	:o
used           	 vbn => use            	  vb	:o
useful         	  jj => useful         	  jj	:o
uses           	 nns => use            	  nn	:o
using          	 vbg => use            	  vb	:o
usual          	  jj => usual          	  jj	:o
usually        	  rb => usually        	  rb	:o
valid          	  jj => valid          	  jj	:o
value-receiver 	  jj => value-receiver 	  jj	:o
values         	 nns => value          	  nn	:o
var            	  nn => var            	  nn	:o
variable       	  jj => variable       	  jj	:o
variable       	  nn => variable       	  nn	:o
variables      	 nns => variable       	  nn	:o
variadic       	  jj => variadic       	  jj	:o
variants       	 nns => variant        	  nn	:o
various        	  jj => various        	  jj	:o
vary           	  vb => vary           	  vb	:o
verify         	  vb => verify         	  vb	:o
versa          	  nn => versa          	  nn	:o
version        	  nn => version        	  nn	:o
vertical       	  jj => vertical       	  jj	:o
vetted         	 vbn => vet            	  vb	:o
vice           	  nn => vice           	  nn	:o
violate        	 vbp => violate        	  vb	:o
visible        	  jj => visible        	  jj	:o
vocabulary     	  nn => vocabulary     	  nn	:o
wait           	  vb => wait           	  vb	:o
was            	 vbd => be             	  vb	:o
way            	  nn => way            	  nn	:o
ways           	 nns => way            	  nn	:o
well           	  rb => well           	  rb	:o
were           	 vbd => be             	  vb	:o
wide           	  jj => wide           	  jj	:o
width          	  nn => width          	  nn	:o
wishes         	 vbz => wish           	  vb	:o
words          	 nns => word           	  nn	:o
works          	 nns => work           	  nn	:o
wrap           	  nn => wrap           	  nn	:o
write          	  vb => write          	  vb	:o
written        	 vbn => write          	  vb	:o
x--            	  jj => x--            	  jj	:o
x.f            	  nn => x.f            	  nn	:o
yet            	  rb => yet            	  rb	:o
yield          	  vb => yield          	  vb	:o
yielding       	 vbg => yield          	  vb	:o
yields         	 nns => yield          	  nn	:o
zero-size      	  jj => zero-size      	  jj	:o
